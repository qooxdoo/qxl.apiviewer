{
  "className": "qx.tool.compiler.targets.meta.AbstractJavascriptMeta",
  "packageName": "qx.tool.compiler.targets.meta",
  "name": "AbstractJavascriptMeta",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 34,
        "column": 0
      },
      "end": {
        "line": 170,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>An AbstractJavascriptMeta provides an abstraction of some source code, and might be\n compromised of a number of input files which are merged together as required.\n This object could represent a file which already exists on disk (eg a transpiled\n source file), or something that is generated on the fly (such as a index.js), or\n a compilation of files (eg a part)</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 44,
        "column": 2
      },
      "end": {
        "line": 49,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Constructor</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "appMeta {qx.tool.compiler.targets.meta.ApplicationMeta}"
        },
        {
          "name": "@param",
          "body": "filename {String} the sourcefile",
          "paramName": "filename",
          "description": " the sourcefile",
          "type": "String"
        },
        {
          "name": "@param",
          "body": "originalSourceFile {String?} the URI to give to the source map",
          "paramName": "originalSourceFile",
          "description": " the URI to give to the source map",
          "optional": true,
          "type": "String"
        }
      ]
    }
  },
  "properties": {
    "needsWriteToDisk": {
      "location": {
        "start": {
          "line": 53,
          "column": 4
        },
        "end": {
          "line": 56,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>If true, this is generated on the fly and needs to be output</p>"
          }
        ]
      },
      "name": "needsWriteToDisk",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "_appMeta": {
      "location": {
        "start": {
          "line": 60,
          "column": 4
        },
        "end": {
          "line": 60,
          "column": 18
        }
      },
      "type": "variable",
      "access": "protected"
    },
    "__filename": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__originalSourceFile": {
      "location": {
        "start": {
          "line": 62,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 30
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__wrapper": {
      "location": {
        "start": {
          "line": 63,
          "column": 4
        },
        "end": {
          "line": 63,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "getAppMeta": {
      "location": {
        "start": {
          "line": 70,
          "column": 4
        },
        "end": {
          "line": 72,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the ApplicationMeta</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{ApplicationMeta}",
            "type": "qx.tool.compiler.targets.meta.ApplicationMeta",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getFilename": {
      "location": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the filename for the output of this JS</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "wrap": {
      "location": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 85,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getWrapper": {
      "location": {
        "start": {
          "line": 87,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "unwrap": {
      "location": {
        "start": {
          "line": 91,
          "column": 4
        },
        "end": {
          "line": 96,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "writeToDisk": {
      "location": {
        "start": {
          "line": 101,
          "column": 4
        },
        "end": {
          "line": 116,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Writes the file to disk, if appropriate</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "writeSourceCodeToStream": {
      "location": {
        "start": {
          "line": 124,
          "column": 4
        },
        "end": {
          "line": 126,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Writes the source code as a stream, merging source files etc\n as necessary</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "ws {WriteStream} the stream to write to",
            "paramName": "ws",
            "description": " the stream to write to",
            "type": "WriteStream"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSourceMap": {
      "location": {
        "start": {
          "line": 131,
          "column": 4
        },
        "end": {
          "line": 133,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reads the source map as a string</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_copySourceMap": {
      "location": {
        "start": {
          "line": 138,
          "column": 4
        },
        "end": {
          "line": 168,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Utility method that merges multiple source maps</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getNeedsWriteToDisk": {
      "type": "function",
      "name": "getNeedsWriteToDisk",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>needsWriteToDisk</code>.\n\nFor further details take a look at the property definition: {@link #needsWriteToDisk}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for needsWriteToDisk"
          }
        ]
      }
    },
    "isNeedsWriteToDisk": {
      "type": "function",
      "name": "isNeedsWriteToDisk",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>needsWriteToDisk</code>.\n\nFor further details take a look at the property definition: {@link #needsWriteToDisk}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for needsWriteToDisk"
          }
        ]
      }
    },
    "setNeedsWriteToDisk": {
      "type": "function",
      "name": "setNeedsWriteToDisk",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>needsWriteToDisk</code>.\n\nFor further details take a look at the property definition: {@link #needsWriteToDisk}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for needsWriteToDisk"
          }
        ]
      }
    },
    "resetNeedsWriteToDisk": {
      "type": "function",
      "name": "resetNeedsWriteToDisk",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>needsWriteToDisk</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #needsWriteToDisk}."
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.tool.compiler.targets.meta.BootJs",
    "qx.tool.compiler.targets.meta.Javascript",
    "qx.tool.compiler.targets.meta.PackageJavascript",
    "qx.tool.compiler.targets.meta.PolyfillJs",
    "qx.tool.compiler.targets.meta.Uglify"
  ]
}