{
  "className": "qx.tool.compiler.makers.Maker",
  "packageName": "qx.tool.compiler.makers",
  "name": "Maker",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0
      },
      "end": {
        "line": 190,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Base class for makers; does not include anything about targets, locales, etc (see AbstractAppMaker)</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "construct": {
    "location": {
      "start": {
        "line": 33,
        "column": 13
      },
      "end": {
        "line": 36,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "dbFilename": {
      "location": {
        "start": {
          "line": 40,
          "column": 4
        },
        "end": {
          "line": 45,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Database filename relative to the target's output directory; if null, defaults to db.json; absolute paths can be used</p>"
          }
        ]
      },
      "name": "dbFilename",
      "propertyType": "new",
      "apply": "__P_229_0",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "environment": {
      "location": {
        "start": {
          "line": 48,
          "column": 4
        },
        "end": {
          "line": 51,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Map of environment settings</p>"
          }
        ]
      },
      "name": "environment",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true
    },
    "outputTypescript": {
      "location": {
        "start": {
          "line": 54,
          "column": 4
        },
        "end": {
          "line": 58,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to write a typescript .d.ts file for all classes</p>"
          }
        ]
      },
      "name": "outputTypescript",
      "propertyType": "new",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "outputTypescriptTo": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 65,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Filename for the typescript, if <code>outputTypescript == true</code></p>"
          }
        ]
      },
      "name": "outputTypescriptTo",
      "propertyType": "new",
      "nullable": false,
      "init": "qooxdoo.d.ts",
      "allowNull": false,
      "check": "String",
      "defaultValue": "qooxdoo.d.ts"
    },
    "noErase": {
      "location": {
        "start": {
          "line": 68,
          "column": 4
        },
        "end": {
          "line": 71,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Blocks automatic deleting of the output directory</p>"
          }
        ]
      },
      "name": "noErase",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "success": {
      "location": {
        "start": {
          "line": 74,
          "column": 4
        },
        "end": {
          "line": 78,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the make has succeeded, null during/before make</p>"
          }
        ]
      },
      "name": "success",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Boolean"
    },
    "hasWarnings": {
      "location": {
        "start": {
          "line": 81,
          "column": 4
        },
        "end": {
          "line": 85,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the make has any warnings, null during/before make</p>"
          }
        ]
      },
      "name": "hasWarnings",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Boolean"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "events": {
    "making": {
      "location": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 35
        }
      },
      "name": "making",
      "type": "qx.event.type.Event"
    },
    "made": {
      "location": {
        "start": {
          "line": 90,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 33
        }
      },
      "name": "made",
      "type": "qx.event.type.Event"
    },
    "writingApplications": {
      "location": {
        "start": {
          "line": 91,
          "column": 4
        },
        "end": {
          "line": 91,
          "column": 48
        }
      },
      "name": "writingApplications",
      "type": "qx.event.type.Event"
    },
    "writingApplication": {
      "location": {
        "start": {
          "line": 92,
          "column": 4
        },
        "end": {
          "line": 92,
          "column": 46
        }
      },
      "name": "writingApplication",
      "type": "qx.event.type.Data"
    },
    "writtenApplication": {
      "location": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 93,
          "column": 46
        }
      },
      "name": "writtenApplication",
      "type": "qx.event.type.Data"
    },
    "writtenApplications": {
      "location": {
        "start": {
          "line": 94,
          "column": 4
        },
        "end": {
          "line": 94,
          "column": 48
        }
      },
      "name": "writtenApplications",
      "type": "qx.event.type.Event"
    }
  },
  "members": {
    "_analyser": {
      "location": {
        "start": {
          "line": 99,
          "column": 4
        },
        "end": {
          "line": 99,
          "column": 19
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{Analyser} current analyser (created on demand)</p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_compiledClasses": {
      "location": {
        "start": {
          "line": 104,
          "column": 4
        },
        "end": {
          "line": 104,
          "column": 26
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Lookup of classes which have been compiled this session; this is a map where the keys are\n the class name and the value is <code>true</code>, it is erased periodically</p>"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "make": {
      "location": {
        "start": {
          "line": 111,
          "column": 4
        },
        "end": {
          "line": 113,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Makes the application</p>"
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getOutputDir": {
      "location": {
        "start": {
          "line": 121,
          "column": 4
        },
        "end": {
          "line": 123,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the output directory, with a trailing slash</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ],
        "@abstract": [
          {
            "name": "@abstract",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "eraseOutputDir": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 135,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Erases the output directory</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__applyDbFilename": {
      "location": {
        "start": {
          "line": 143,
          "column": 4
        },
        "end": {
          "line": 147,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply for databaseName property</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value",
            "paramName": "value",
            "type": ""
          },
          {
            "name": "@param",
            "body": "oldValue",
            "paramName": "oldValue",
            "type": ""
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getAnalyser": {
      "location": {
        "start": {
          "line": 153,
          "column": 4
        },
        "end": {
          "line": 163,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the analyser, creating it if necessary</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Analyser}",
            "type": "Analyser",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRecentlyCompiledClasses": {
      "location": {
        "start": {
          "line": 171,
          "column": 4
        },
        "end": {
          "line": 177,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a list of classes which have been compiled in this session</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "eraseAfter {Boolean?} if true, the list is reset after returning",
            "paramName": "eraseAfter",
            "description": " if true, the list is reset after returning",
            "optional": true,
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} list of class names that have been compiled",
            "type": "Map",
            "description": " list of class names that have been compiled"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_createAnalyser": {
      "location": {
        "start": {
          "line": 184,
          "column": 4
        },
        "end": {
          "line": 188,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates the analyser</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Analyser}",
            "type": "Analyser",
            "description": ""
          }
        ],
        "@protected": [
          {
            "name": "@protected",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getDbFilename": {
      "type": "function",
      "name": "getDbFilename",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>dbFilename</code>.\n\nFor further details take a look at the property definition: {@link #dbFilename}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for dbFilename"
          }
        ]
      }
    },
    "setDbFilename": {
      "type": "function",
      "name": "setDbFilename",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>dbFilename</code>.\n\nFor further details take a look at the property definition: {@link #dbFilename}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for dbFilename"
          }
        ]
      }
    },
    "resetDbFilename": {
      "type": "function",
      "name": "resetDbFilename",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>dbFilename</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #dbFilename}."
          }
        ]
      }
    },
    "getEnvironment": {
      "type": "function",
      "name": "getEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>environment</code>.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for environment"
          }
        ]
      }
    },
    "setEnvironment": {
      "type": "function",
      "name": "setEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>environment</code>.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for environment"
          }
        ]
      }
    },
    "resetEnvironment": {
      "type": "function",
      "name": "resetEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>environment</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ]
      }
    },
    "getOutputTypescript": {
      "type": "function",
      "name": "getOutputTypescript",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>outputTypescript</code>.\n\nFor further details take a look at the property definition: {@link #outputTypescript}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for outputTypescript"
          }
        ]
      }
    },
    "isOutputTypescript": {
      "type": "function",
      "name": "isOutputTypescript",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>outputTypescript</code>.\n\nFor further details take a look at the property definition: {@link #outputTypescript}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for outputTypescript"
          }
        ]
      }
    },
    "setOutputTypescript": {
      "type": "function",
      "name": "setOutputTypescript",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>outputTypescript</code>.\n\nFor further details take a look at the property definition: {@link #outputTypescript}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for outputTypescript"
          }
        ]
      }
    },
    "resetOutputTypescript": {
      "type": "function",
      "name": "resetOutputTypescript",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>outputTypescript</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #outputTypescript}."
          }
        ]
      }
    },
    "getOutputTypescriptTo": {
      "type": "function",
      "name": "getOutputTypescriptTo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>outputTypescriptTo</code>.\n\nFor further details take a look at the property definition: {@link #outputTypescriptTo}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for outputTypescriptTo"
          }
        ]
      }
    },
    "setOutputTypescriptTo": {
      "type": "function",
      "name": "setOutputTypescriptTo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>outputTypescriptTo</code>.\n\nFor further details take a look at the property definition: {@link #outputTypescriptTo}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for outputTypescriptTo"
          }
        ]
      }
    },
    "resetOutputTypescriptTo": {
      "type": "function",
      "name": "resetOutputTypescriptTo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>outputTypescriptTo</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #outputTypescriptTo}."
          }
        ]
      }
    },
    "getNoErase": {
      "type": "function",
      "name": "getNoErase",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>noErase</code>.\n\nFor further details take a look at the property definition: {@link #noErase}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for noErase"
          }
        ]
      }
    },
    "isNoErase": {
      "type": "function",
      "name": "isNoErase",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>noErase</code>.\n\nFor further details take a look at the property definition: {@link #noErase}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for noErase"
          }
        ]
      }
    },
    "setNoErase": {
      "type": "function",
      "name": "setNoErase",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>noErase</code>.\n\nFor further details take a look at the property definition: {@link #noErase}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for noErase"
          }
        ]
      }
    },
    "resetNoErase": {
      "type": "function",
      "name": "resetNoErase",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>noErase</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #noErase}."
          }
        ]
      }
    },
    "getSuccess": {
      "type": "function",
      "name": "getSuccess",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>success</code>.\n\nFor further details take a look at the property definition: {@link #success}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for success"
          }
        ]
      }
    },
    "isSuccess": {
      "type": "function",
      "name": "isSuccess",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>success</code>.\n\nFor further details take a look at the property definition: {@link #success}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for success"
          }
        ]
      }
    },
    "setSuccess": {
      "type": "function",
      "name": "setSuccess",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>success</code>.\n\nFor further details take a look at the property definition: {@link #success}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for success"
          }
        ]
      }
    },
    "resetSuccess": {
      "type": "function",
      "name": "resetSuccess",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>success</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #success}."
          }
        ]
      }
    },
    "getHasWarnings": {
      "type": "function",
      "name": "getHasWarnings",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>hasWarnings</code>.\n\nFor further details take a look at the property definition: {@link #hasWarnings}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for hasWarnings"
          }
        ]
      }
    },
    "isHasWarnings": {
      "type": "function",
      "name": "isHasWarnings",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>hasWarnings</code>.\n\nFor further details take a look at the property definition: {@link #hasWarnings}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for hasWarnings"
          }
        ]
      }
    },
    "setHasWarnings": {
      "type": "function",
      "name": "setHasWarnings",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>hasWarnings</code>.\n\nFor further details take a look at the property definition: {@link #hasWarnings}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for hasWarnings"
          }
        ]
      }
    },
    "resetHasWarnings": {
      "type": "function",
      "name": "resetHasWarnings",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>hasWarnings</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #hasWarnings}."
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.tool.compiler.makers.AbstractAppMaker"
  ]
}