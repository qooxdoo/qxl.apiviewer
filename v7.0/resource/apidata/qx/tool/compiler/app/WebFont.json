{
  "className": "qx.tool.compiler.app.WebFont",
  "packageName": "qx.tool.compiler.app",
  "name": "WebFont",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 35,
        "column": 0
      },
      "end": {
        "line": 382,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Represents a WebFont provided by a Library</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 38,
        "column": 13
      },
      "end": {
        "line": 41,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "properties": {
    "name": {
      "location": {
        "start": {
          "line": 45,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The name of the webfont</p>"
          }
        ]
      },
      "name": "name",
      "propertyType": "new",
      "check": "String"
    },
    "defaultSize": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 53,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The default size</p>"
          }
        ]
      },
      "name": "defaultSize",
      "propertyType": "new",
      "init": 40,
      "check": "Integer",
      "defaultValue": 40
    },
    "mapping": {
      "location": {
        "start": {
          "line": 61,
          "column": 4
        },
        "end": {
          "line": 65,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Optional mapping filename. The path is relative to the location of the\n <code>Manifest.json</code> file. The mapping file is in json format and should contain\n a map of icon name to code point in hex:\n <code>{ \"my_icon\": \"ef99\", \"my_other_icon\": \"483c\"}</code></p>"
          }
        ]
      },
      "name": "mapping",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "comparisonString": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 77,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Characters that are used to test if the font has loaded properly. These\n default to \"WEei\" in <code>qx.bom.webfont.Validator</code> and can be overridden\n for certain cases like icon fonts that do not provide the predefined\n characters.</p>"
          }
        ]
      },
      "name": "comparisonString",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "resources": {
      "location": {
        "start": {
          "line": 80,
          "column": 4
        },
        "end": {
          "line": 82,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String[]} Resources that make up the font; an array of Strings, each of which can be a URL or a local file</p>"
          }
        ]
      },
      "name": "resources",
      "propertyType": "new",
      "check": "Array"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__library": {
      "location": {
        "start": {
          "line": 86,
          "column": 4
        },
        "end": {
          "line": 86,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__fontData": {
      "location": {
        "start": {
          "line": 87,
          "column": 4
        },
        "end": {
          "line": 87,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_loadLocalFont": {
      "location": {
        "start": {
          "line": 95,
          "column": 4
        },
        "end": {
          "line": 100,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper which triggers a local font analyze run.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "filename {String} Filename for the local font",
            "paramName": "filename",
            "description": " Filename for the local font",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise}",
            "type": "Promise",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_loadRemoteFont": {
      "location": {
        "start": {
          "line": 108,
          "column": 4
        },
        "end": {
          "line": 151,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Helper which loads a remote font to analyze the result.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "url {String} URL for the font download",
            "paramName": "url",
            "description": " URL for the font download",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise}",
            "type": "Promise",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__processFontFile": {
      "location": {
        "start": {
          "line": 162,
          "column": 4
        },
        "end": {
          "line": 274,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Common code to extract the desired font information from a font file\n on disk. It resolves the promises given by the calling stub (remote or\n local font retrieval).</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "filename {String} Path to font file",
            "paramName": "filename",
            "description": " Path to font file",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "resolve {Function} External promise resolve",
            "paramName": "resolve",
            "description": " External promise resolve",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "reject {Function} External promise reject",
            "paramName": "reject",
            "description": " External promise reject",
            "type": "Function"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getBootstrapCode": {
      "location": {
        "start": {
          "line": 284,
          "column": 4
        },
        "end": {
          "line": 308,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Return bootstrap code that is executed before the Application starts.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target  {qx.tool.compiler.targets.Target} the target",
            "paramName": "target",
            "description": " the target",
            "type": "qx.tool.compiler.targets.Target"
          },
          {
            "name": "@param",
            "body": "application  {qx.tool.compiler.app.Application} the application being built",
            "paramName": "application",
            "description": " the application being built",
            "type": "qx.tool.compiler.app.Application"
          },
          {
            "name": "@param",
            "body": "initial {Boolean} true if this is the first pass",
            "paramName": "initial",
            "description": " true if this is the first pass",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "generateForTarget": {
      "location": {
        "start": {
          "line": 317,
          "column": 4
        },
        "end": {
          "line": 356,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called by {Target} to compile the fonts, called once per application build\n (NOTE:: right now, this is called for each application - that is soon to be fixed)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target  {qx.tool.compiler.targets.Target} the target",
            "paramName": "target",
            "description": " the target",
            "type": "qx.tool.compiler.targets.Target"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise}",
            "type": "Promise",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "generateForApplication": {
      "location": {
        "start": {
          "line": 365,
          "column": 4
        },
        "end": {
          "line": 367,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called by Target to add fonts to an application</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target  {qx.tool.compiler.targets.Target} the target",
            "paramName": "target",
            "description": " the target",
            "type": "qx.tool.compiler.targets.Target"
          },
          {
            "name": "@param",
            "body": "application  {qx.tool.compiler.app.Application} the application being built",
            "paramName": "application",
            "description": " the application being built",
            "type": "qx.tool.compiler.app.Application"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise}",
            "type": "Promise",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getName": {
      "type": "function",
      "name": "getName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for name"
          }
        ]
      }
    },
    "setName": {
      "type": "function",
      "name": "setName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for name"
          }
        ]
      }
    },
    "resetName": {
      "type": "function",
      "name": "resetName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>name</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ]
      }
    },
    "getDefaultSize": {
      "type": "function",
      "name": "getDefaultSize",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultSize</code>.\n\nFor further details take a look at the property definition: {@link #defaultSize}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Integer",
            "desc": "Returns the value for defaultSize"
          }
        ]
      }
    },
    "setDefaultSize": {
      "type": "function",
      "name": "setDefaultSize",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultSize</code>.\n\nFor further details take a look at the property definition: {@link #defaultSize}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Integer",
            "paramName": "value",
            "desc": "Value for defaultSize"
          }
        ]
      }
    },
    "resetDefaultSize": {
      "type": "function",
      "name": "resetDefaultSize",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>defaultSize</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #defaultSize}."
          }
        ]
      }
    },
    "getMapping": {
      "type": "function",
      "name": "getMapping",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>mapping</code>.\n\nFor further details take a look at the property definition: {@link #mapping}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for mapping"
          }
        ]
      }
    },
    "setMapping": {
      "type": "function",
      "name": "setMapping",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>mapping</code>.\n\nFor further details take a look at the property definition: {@link #mapping}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for mapping"
          }
        ]
      }
    },
    "resetMapping": {
      "type": "function",
      "name": "resetMapping",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>mapping</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #mapping}."
          }
        ]
      }
    },
    "getComparisonString": {
      "type": "function",
      "name": "getComparisonString",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>comparisonString</code>.\n\nFor further details take a look at the property definition: {@link #comparisonString}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for comparisonString"
          }
        ]
      }
    },
    "setComparisonString": {
      "type": "function",
      "name": "setComparisonString",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>comparisonString</code>.\n\nFor further details take a look at the property definition: {@link #comparisonString}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for comparisonString"
          }
        ]
      }
    },
    "resetComparisonString": {
      "type": "function",
      "name": "resetComparisonString",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>comparisonString</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #comparisonString}."
          }
        ]
      }
    },
    "getResources": {
      "type": "function",
      "name": "getResources",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>resources</code>.\n\nFor further details take a look at the property definition: {@link #resources}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for resources"
          }
        ]
      }
    },
    "setResources": {
      "type": "function",
      "name": "setResources",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>resources</code>.\n\nFor further details take a look at the property definition: {@link #resources}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for resources"
          }
        ]
      }
    },
    "resetResources": {
      "type": "function",
      "name": "resetResources",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>resources</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #resources}."
          }
        ]
      }
    }
  },
  "descendants": []
}