{
  "className": "qx.tool.compiler.Analyser",
  "packageName": "qx.tool.compiler",
  "name": "Analyser",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 43,
        "column": 0
      },
      "end": {
        "line": 1580,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Entry point for analysing source files; maintains a list of known libraries\n (eg a qooxdoo application, packages, qooxdoo framework etc.), known classes\n (and the files and library in which the class is defined, and environment\n checks which have been used (env checks imply a dependency).</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 52,
        "column": 2
      },
      "end": {
        "line": 63,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Constructor</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "dbFilename\n          {String} the name of the database, defaults to \"db.json\"",
          "paramName": "dbFilename",
          "description": " the name of the database, defaults to \"db.json\"",
          "type": "String"
        }
      ]
    }
  },
  "properties": {
    "outputDir": {
      "location": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 70,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Output directory for the compiled application</p>"
          }
        ]
      },
      "name": "outputDir",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "applicationTypes": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 76,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Supported application types</p>"
          }
        ]
      },
      "name": "applicationTypes",
      "propertyType": "new",
      "init": [
        "node",
        "browser"
      ],
      "check": "Array",
      "defaultValue": [
        "node",
        "browser"
      ]
    },
    "trackLineNumbers": {
      "location": {
        "start": {
          "line": 79,
          "column": 4
        },
        "end": {
          "line": 83,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to preserve line numbers</p>"
          }
        ]
      },
      "name": "trackLineNumbers",
      "propertyType": "new",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "processResources": {
      "location": {
        "start": {
          "line": 86,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to process resources</p>"
          }
        ]
      },
      "name": "processResources",
      "propertyType": "new",
      "nullable": false,
      "init": true,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": true
    },
    "addCreatedAt": {
      "location": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 97,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to add <code>$$createdAt</code> to new objects</p>"
          }
        ]
      },
      "name": "addCreatedAt",
      "propertyType": "new",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "environment": {
      "location": {
        "start": {
          "line": 100,
          "column": 4
        },
        "end": {
          "line": 104,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Environment during compile time</p>"
          }
        ]
      },
      "name": "environment",
      "propertyType": "new",
      "apply": "_applyEnvironment",
      "check": "Map"
    },
    "babelConfig": {
      "location": {
        "start": {
          "line": 107,
          "column": 4
        },
        "end": {
          "line": 111,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>configuration of babel</p>"
          }
        ]
      },
      "name": "babelConfig",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Object"
    },
    "ignores": {
      "location": {
        "start": {
          "line": 114,
          "column": 4
        },
        "end": {
          "line": 118,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>list of global ignores</p>"
          }
        ]
      },
      "name": "ignores",
      "propertyType": "new",
      "nullable": false,
      "init": [],
      "allowNull": false,
      "check": "Array",
      "defaultValue": []
    },
    "globalSymbols": {
      "location": {
        "start": {
          "line": 121,
          "column": 4
        },
        "end": {
          "line": 125,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>list of global symbols</p>"
          }
        ]
      },
      "name": "globalSymbols",
      "propertyType": "new",
      "nullable": false,
      "init": [],
      "allowNull": false,
      "check": "Array",
      "defaultValue": []
    },
    "manglePrivates": {
      "location": {
        "start": {
          "line": 128,
          "column": 4
        },
        "end": {
          "line": 131,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether and how to mangle private identifiers</p>"
          }
        ]
      },
      "name": "manglePrivates",
      "propertyType": "new",
      "init": "readable",
      "possibleValues": [
        "off",
        "readable",
        "unreadable"
      ],
      "defaultValue": "readable"
    },
    "writePoLineNumbers": {
      "location": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 137,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to write line numbers to .po files</p>"
          }
        ]
      },
      "name": "writePoLineNumbers",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "events": {
    "compilingClass": {
      "location": {
        "start": {
          "line": 148,
          "column": 4
        },
        "end": {
          "line": 148,
          "column": 40
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a class is about to be compiled; data is a map:\n dbClassInfo: {Object} the newly populated class info\n oldDbClassInfo: {Object} the previous populated class info\n classFile - {ClassFile} the qx.tool.compiler.ClassFile instance</p>"
          }
        ]
      },
      "name": "compilingClass",
      "type": "qx.event.type.Data"
    },
    "compiledClass": {
      "location": {
        "start": {
          "line": 156,
          "column": 4
        },
        "end": {
          "line": 156,
          "column": 39
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a class is compiled; data is a map:\n dbClassInfo: {Object} the newly populated class info\n oldDbClassInfo: {Object} the previous populated class info\n classFile - {ClassFile} the qx.tool.compiler.ClassFile instance</p>"
          }
        ]
      },
      "name": "compiledClass",
      "type": "qx.event.type.Data"
    },
    "alreadyCompiledClass": {
      "location": {
        "start": {
          "line": 163,
          "column": 4
        },
        "end": {
          "line": 163,
          "column": 46
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when a class is already compiled (but needed for compilation); data is a map:\n className: {String}\n dbClassInfo: {Object} the newly populated class info</p>"
          }
        ]
      },
      "name": "alreadyCompiledClass",
      "type": "qx.event.type.Data"
    },
    "saveDatabase": {
      "location": {
        "start": {
          "line": 169,
          "column": 4
        },
        "end": {
          "line": 169,
          "column": 38
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when the database is been saved\n database: {Object} the database to save</p>"
          }
        ]
      },
      "name": "saveDatabase",
      "type": "qx.event.type.Data"
    }
  },
  "members": {
    "__opened": {
      "location": {
        "start": {
          "line": 173,
          "column": 4
        },
        "end": {
          "line": 173,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__resManager": {
      "location": {
        "start": {
          "line": 174,
          "column": 4
        },
        "end": {
          "line": 174,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__dbFilename": {
      "location": {
        "start": {
          "line": 175,
          "column": 4
        },
        "end": {
          "line": 175,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__db": {
      "location": {
        "start": {
          "line": 176,
          "column": 4
        },
        "end": {
          "line": 176,
          "column": 14
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__libraries": {
      "location": {
        "start": {
          "line": 179,
          "column": 4
        },
        "end": {
          "line": 179,
          "column": 21
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{Library[]} All libraries</p>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__librariesByNamespace": {
      "location": {
        "start": {
          "line": 182,
          "column": 4
        },
        "end": {
          "line": 182,
          "column": 32
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{Map{String,Library}} Lookup of libraries, indexed by namespace</p>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__classes": {
      "location": {
        "start": {
          "line": 184,
          "column": 4
        },
        "end": {
          "line": 184,
          "column": 19
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__initialClassesToScan": {
      "location": {
        "start": {
          "line": 185,
          "column": 4
        },
        "end": {
          "line": 185,
          "column": 32
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__cldrs": {
      "location": {
        "start": {
          "line": 186,
          "column": 4
        },
        "end": {
          "line": 186,
          "column": 17
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__translations": {
      "location": {
        "start": {
          "line": 187,
          "column": 4
        },
        "end": {
          "line": 187,
          "column": 24
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__classFiles": {
      "location": {
        "start": {
          "line": 189,
          "column": 4
        },
        "end": {
          "line": 189,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__environmentChecks": {
      "location": {
        "start": {
          "line": 190,
          "column": 4
        },
        "end": {
          "line": 190,
          "column": 29
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__inDefer": {
      "location": {
        "start": {
          "line": 191,
          "column": 4
        },
        "end": {
          "line": 191,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__qooxdooVersion": {
      "location": {
        "start": {
          "line": 192,
          "column": 4
        },
        "end": {
          "line": 192,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__environmentHash": {
      "location": {
        "start": {
          "line": 193,
          "column": 4
        },
        "end": {
          "line": 193,
          "column": 27
        }
      },
      "type": "variable",
      "access": "private"
    },
    "open": {
      "location": {
        "start": {
          "line": 200,
          "column": 4
        },
        "end": {
          "line": 219,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Opens the analyser, loads database etc</p>"
          }
        ],
        "@async": [
          {
            "name": "@async",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "initialScan": {
      "location": {
        "start": {
          "line": 227,
          "column": 4
        },
        "end": {
          "line": 273,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Scans the source files for javascript class and resource references and\n calculates the dependency tree</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "cb",
            "paramName": "cb",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "loadDatabase": {
      "location": {
        "start": {
          "line": 278,
          "column": 4
        },
        "end": {
          "line": 281,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Loads the database if available</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resetDatabase": {
      "location": {
        "start": {
          "line": 288,
          "column": 4
        },
        "end": {
          "line": 298,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Resets the database</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise}",
            "type": "Promise",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "saveDatabase": {
      "location": {
        "start": {
          "line": 303,
          "column": 4
        },
        "end": {
          "line": 310,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Saves the database</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDatabase": {
      "location": {
        "start": {
          "line": 317,
          "column": 4
        },
        "end": {
          "line": 319,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the loaded database</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "",
            "type": "",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "analyseClasses": {
      "location": {
        "start": {
          "line": 325,
          "column": 4
        },
        "end": {
          "line": 1000,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Parses all the source files recursively until all classes and all\n dependent classes are loaded</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_addRequiredClass": {
      "location": {
        "start": {
          "line": 1007,
          "column": 4
        },
        "end": {
          "line": 1020,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called when a reference to a class is made</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "className",
            "paramName": "className",
            "type": ""
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getDependentClasses": {
      "location": {
        "start": {
          "line": 1026,
          "column": 4
        },
        "end": {
          "line": 1028,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the full list of required classes</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null}",
            "type": "null",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCachedClassInfo": {
      "location": {
        "start": {
          "line": 1034,
          "column": 4
        },
        "end": {
          "line": 1036,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns cached class info - returns null if not loaded or not in the database</p>"
          }
        ],
        "@returb": [
          {
            "name": "@returb",
            "body": "DbClassInfo"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getClassInfo": {
      "location": {
        "start": {
          "line": 1044,
          "column": 4
        },
        "end": {
          "line": 1148,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Loads a class</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "className {String} the name of the class",
            "paramName": "className",
            "description": " the name of the class",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "forceScan {Boolean?} true if the class is to be compiled whether it needs it or not (default false)",
            "paramName": "forceScan",
            "description": " true if the class is to be compiled whether it needs it or not (default false)",
            "optional": true,
            "type": "Boolean"
          },
          {
            "name": "@param",
            "body": "cb {Function} (err, DbClassInfo)",
            "paramName": "cb",
            "description": " (err, DbClassInfo)",
            "type": "Function"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCldr": {
      "location": {
        "start": {
          "line": 1155,
          "column": 4
        },
        "end": {
          "line": 1164,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the CLDR data for a given locale</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "locale {String} the locale string",
            "paramName": "locale",
            "description": " the locale string",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "Promise({cldr})"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getTranslation": {
      "location": {
        "start": {
          "line": 1172,
          "column": 4
        },
        "end": {
          "line": 1183,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the translation for the locale and library, caching the result.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "library",
            "paramName": "library",
            "type": ""
          },
          {
            "name": "@param",
            "body": "locale",
            "paramName": "locale",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{translation}",
            "type": "translation",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "updateTranslations": {
      "location": {
        "start": {
          "line": 1192,
          "column": 4
        },
        "end": {
          "line": 1328,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Updates all translations to include all msgids found in code</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "appLibrary {qx.tool.compiler.app.Library} the library to update",
            "paramName": "appLibrary",
            "description": " the library to update",
            "type": "qx.tool.compiler.app.Library"
          },
          {
            "name": "@param",
            "body": "locales {String[]} locales",
            "paramName": "locales",
            "description": " locales",
            "type": "String[]"
          },
          {
            "name": "@param",
            "body": "libraries {qx.tool.compiler.app.Library[]} all libraries",
            "paramName": "libraries",
            "description": " all libraries",
            "type": "qx.tool.compiler.app.Library[]"
          },
          {
            "name": "@param",
            "body": "copyAllMsgs {Boolean} whether to copy everything, or just those that are required",
            "paramName": "copyAllMsgs",
            "description": " whether to copy everything, or just those that are required",
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQooxdooPath": {
      "location": {
        "start": {
          "line": 1335,
          "column": 4
        },
        "end": {
          "line": 1341,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the path to the qooxdoo library</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "",
            "type": "",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "findLibrary": {
      "location": {
        "start": {
          "line": 1346,
          "column": 4
        },
        "end": {
          "line": 1349,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Finds the library with a name(space)</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getLibraries": {
      "location": {
        "start": {
          "line": 1355,
          "column": 4
        },
        "end": {
          "line": 1357,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns all libraries</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null}",
            "type": "null",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addLibrary": {
      "location": {
        "start": {
          "line": 1364,
          "column": 4
        },
        "end": {
          "line": 1367,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a library definition</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "library",
            "paramName": "library",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addClass": {
      "location": {
        "start": {
          "line": 1374,
          "column": 4
        },
        "end": {
          "line": 1376,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a required class to be analysed by analyseClasses()</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "classname",
            "paramName": "classname",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "removeClass": {
      "location": {
        "start": {
          "line": 1382,
          "column": 4
        },
        "end": {
          "line": 1384,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Removes a class from the list of required classes to analyse</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "classname {String}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getSymbolType": {
      "location": {
        "start": {
          "line": 1391,
          "column": 4
        },
        "end": {
          "line": 1401,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects the symbol type, ie class, package, member, etc</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "name",
            "paramName": "name",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{{symbolType,name,className}?}",
            "type": "{symbolType,name,className",
            "description": "?}"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getLibraryFromClassname": {
      "location": {
        "start": {
          "line": 1408,
          "column": 4
        },
        "end": {
          "line": 1427,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the library for a given classname, supports private files</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "className",
            "paramName": "className",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*}",
            "type": "*",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getClassFilename": {
      "location": {
        "start": {
          "line": 1434,
          "column": 4
        },
        "end": {
          "line": 1447,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the classname</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "className",
            "paramName": "className",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{string}",
            "type": "string",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "setEnvironmentCheck": {
      "location": {
        "start": {
          "line": 1455,
          "column": 4
        },
        "end": {
          "line": 1466,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets an environment value as being checked for</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key",
            "paramName": "key",
            "type": ""
          },
          {
            "name": "@param",
            "body": "value",
            "paramName": "value",
            "type": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getEnvironmentCheck": {
      "location": {
        "start": {
          "line": 1474,
          "column": 4
        },
        "end": {
          "line": 1476,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Tests whether an environment value is checked for</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "key",
            "paramName": "key",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "",
            "type": "",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getResourceManager": {
      "location": {
        "start": {
          "line": 1481,
          "column": 4
        },
        "end": {
          "line": 1483,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the resource manager</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQooxdooVersion": {
      "location": {
        "start": {
          "line": 1489,
          "column": 4
        },
        "end": {
          "line": 1500,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the version of Qooxdoo</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDbFilename": {
      "location": {
        "start": {
          "line": 1506,
          "column": 4
        },
        "end": {
          "line": 1508,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the database filename</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null}",
            "type": "null",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getResDbFilename": {
      "location": {
        "start": {
          "line": 1514,
          "column": 4
        },
        "end": {
          "line": 1523,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the resource database filename</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{null}",
            "type": "null",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_applyEnvironment": {
      "location": {
        "start": {
          "line": 1526,
          "column": 4
        },
        "end": {
          "line": 1529,
          "column": 5
        }
      },
      "jsdoc": {},
      "type": "function",
      "access": "protected",
      "applyFor": [
        "environment"
      ]
    },
    "isContextChanged": {
      "location": {
        "start": {
          "line": 1537,
          "column": 4
        },
        "end": {
          "line": 1557,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the compilation context has changed since last analysis\n e.g. compiler version, environment variables</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "updateEnvironmentData": {
      "location": {
        "start": {
          "line": 1567,
          "column": 4
        },
        "end": {
          "line": 1578,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Sets the environment data in the __db.\n The data beeing set are:</p>\n<ul>\n<li>a hash of the current environment values</li>\n<li>the compiler version</li>\n<li>a list of the libraries used</li>\n</ul>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getOutputDir": {
      "type": "function",
      "name": "getOutputDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>outputDir</code>.\n\nFor further details take a look at the property definition: {@link #outputDir}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for outputDir"
          }
        ]
      }
    },
    "setOutputDir": {
      "type": "function",
      "name": "setOutputDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>outputDir</code>.\n\nFor further details take a look at the property definition: {@link #outputDir}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for outputDir"
          }
        ]
      }
    },
    "resetOutputDir": {
      "type": "function",
      "name": "resetOutputDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>outputDir</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #outputDir}."
          }
        ]
      }
    },
    "getApplicationTypes": {
      "type": "function",
      "name": "getApplicationTypes",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>applicationTypes</code>.\n\nFor further details take a look at the property definition: {@link #applicationTypes}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for applicationTypes"
          }
        ]
      }
    },
    "setApplicationTypes": {
      "type": "function",
      "name": "setApplicationTypes",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>applicationTypes</code>.\n\nFor further details take a look at the property definition: {@link #applicationTypes}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for applicationTypes"
          }
        ]
      }
    },
    "resetApplicationTypes": {
      "type": "function",
      "name": "resetApplicationTypes",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>applicationTypes</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #applicationTypes}."
          }
        ]
      }
    },
    "getTrackLineNumbers": {
      "type": "function",
      "name": "getTrackLineNumbers",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>trackLineNumbers</code>.\n\nFor further details take a look at the property definition: {@link #trackLineNumbers}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for trackLineNumbers"
          }
        ]
      }
    },
    "isTrackLineNumbers": {
      "type": "function",
      "name": "isTrackLineNumbers",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>trackLineNumbers</code>.\n\nFor further details take a look at the property definition: {@link #trackLineNumbers}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for trackLineNumbers"
          }
        ]
      }
    },
    "setTrackLineNumbers": {
      "type": "function",
      "name": "setTrackLineNumbers",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>trackLineNumbers</code>.\n\nFor further details take a look at the property definition: {@link #trackLineNumbers}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for trackLineNumbers"
          }
        ]
      }
    },
    "resetTrackLineNumbers": {
      "type": "function",
      "name": "resetTrackLineNumbers",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>trackLineNumbers</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #trackLineNumbers}."
          }
        ]
      }
    },
    "getProcessResources": {
      "type": "function",
      "name": "getProcessResources",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>processResources</code>.\n\nFor further details take a look at the property definition: {@link #processResources}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for processResources"
          }
        ]
      }
    },
    "isProcessResources": {
      "type": "function",
      "name": "isProcessResources",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>processResources</code>.\n\nFor further details take a look at the property definition: {@link #processResources}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for processResources"
          }
        ]
      }
    },
    "setProcessResources": {
      "type": "function",
      "name": "setProcessResources",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>processResources</code>.\n\nFor further details take a look at the property definition: {@link #processResources}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for processResources"
          }
        ]
      }
    },
    "resetProcessResources": {
      "type": "function",
      "name": "resetProcessResources",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>processResources</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #processResources}."
          }
        ]
      }
    },
    "getAddCreatedAt": {
      "type": "function",
      "name": "getAddCreatedAt",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>addCreatedAt</code>.\n\nFor further details take a look at the property definition: {@link #addCreatedAt}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for addCreatedAt"
          }
        ]
      }
    },
    "isAddCreatedAt": {
      "type": "function",
      "name": "isAddCreatedAt",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>addCreatedAt</code>.\n\nFor further details take a look at the property definition: {@link #addCreatedAt}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for addCreatedAt"
          }
        ]
      }
    },
    "setAddCreatedAt": {
      "type": "function",
      "name": "setAddCreatedAt",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>addCreatedAt</code>.\n\nFor further details take a look at the property definition: {@link #addCreatedAt}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for addCreatedAt"
          }
        ]
      }
    },
    "resetAddCreatedAt": {
      "type": "function",
      "name": "resetAddCreatedAt",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>addCreatedAt</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #addCreatedAt}."
          }
        ]
      }
    },
    "getEnvironment": {
      "type": "function",
      "name": "getEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>environment</code>.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Map",
            "desc": "Returns the value for environment"
          }
        ]
      }
    },
    "setEnvironment": {
      "type": "function",
      "name": "setEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>environment</code>.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Map",
            "paramName": "value",
            "desc": "Value for environment"
          }
        ]
      }
    },
    "resetEnvironment": {
      "type": "function",
      "name": "resetEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>environment</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ]
      }
    },
    "getBabelConfig": {
      "type": "function",
      "name": "getBabelConfig",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>babelConfig</code>.\n\nFor further details take a look at the property definition: {@link #babelConfig}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Object",
            "desc": "Returns the value for babelConfig"
          }
        ]
      }
    },
    "setBabelConfig": {
      "type": "function",
      "name": "setBabelConfig",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>babelConfig</code>.\n\nFor further details take a look at the property definition: {@link #babelConfig}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Object",
            "paramName": "value",
            "desc": "Value for babelConfig"
          }
        ]
      }
    },
    "resetBabelConfig": {
      "type": "function",
      "name": "resetBabelConfig",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>babelConfig</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #babelConfig}."
          }
        ]
      }
    },
    "getIgnores": {
      "type": "function",
      "name": "getIgnores",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>ignores</code>.\n\nFor further details take a look at the property definition: {@link #ignores}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for ignores"
          }
        ]
      }
    },
    "setIgnores": {
      "type": "function",
      "name": "setIgnores",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>ignores</code>.\n\nFor further details take a look at the property definition: {@link #ignores}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for ignores"
          }
        ]
      }
    },
    "resetIgnores": {
      "type": "function",
      "name": "resetIgnores",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>ignores</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #ignores}."
          }
        ]
      }
    },
    "getGlobalSymbols": {
      "type": "function",
      "name": "getGlobalSymbols",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>globalSymbols</code>.\n\nFor further details take a look at the property definition: {@link #globalSymbols}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for globalSymbols"
          }
        ]
      }
    },
    "setGlobalSymbols": {
      "type": "function",
      "name": "setGlobalSymbols",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>globalSymbols</code>.\n\nFor further details take a look at the property definition: {@link #globalSymbols}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for globalSymbols"
          }
        ]
      }
    },
    "resetGlobalSymbols": {
      "type": "function",
      "name": "resetGlobalSymbols",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>globalSymbols</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #globalSymbols}."
          }
        ]
      }
    },
    "getManglePrivates": {
      "type": "function",
      "name": "getManglePrivates",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>manglePrivates</code>.\n\nFor further details take a look at the property definition: {@link #manglePrivates}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for manglePrivates"
          }
        ]
      }
    },
    "setManglePrivates": {
      "type": "function",
      "name": "setManglePrivates",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>manglePrivates</code>.\n\nFor further details take a look at the property definition: {@link #manglePrivates}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for manglePrivates"
          }
        ]
      }
    },
    "resetManglePrivates": {
      "type": "function",
      "name": "resetManglePrivates",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>manglePrivates</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #manglePrivates}."
          }
        ]
      }
    },
    "getWritePoLineNumbers": {
      "type": "function",
      "name": "getWritePoLineNumbers",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writePoLineNumbers</code>.\n\nFor further details take a look at the property definition: {@link #writePoLineNumbers}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writePoLineNumbers"
          }
        ]
      }
    },
    "isWritePoLineNumbers": {
      "type": "function",
      "name": "isWritePoLineNumbers",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writePoLineNumbers</code>.\n\nFor further details take a look at the property definition: {@link #writePoLineNumbers}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writePoLineNumbers"
          }
        ]
      }
    },
    "setWritePoLineNumbers": {
      "type": "function",
      "name": "setWritePoLineNumbers",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>writePoLineNumbers</code>.\n\nFor further details take a look at the property definition: {@link #writePoLineNumbers}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for writePoLineNumbers"
          }
        ]
      }
    },
    "resetWritePoLineNumbers": {
      "type": "function",
      "name": "resetWritePoLineNumbers",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>writePoLineNumbers</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #writePoLineNumbers}."
          }
        ]
      }
    }
  },
  "descendants": []
}