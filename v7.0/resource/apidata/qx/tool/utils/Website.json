{
  "className": "qx.tool.utils.Website",
  "packageName": "qx.tool.utils",
  "name": "Website",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 43,
        "column": 0
      },
      "end": {
        "line": 421,
        "column": 3
      }
    }
  },
  "type": "class",
  "statics": {
    "APP_NAMESPACE": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 25
        }
      },
      "type": "variable",
      "access": "public"
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 50,
        "column": 2
      },
      "end": {
        "line": 65,
        "column": 3
      }
    }
  },
  "properties": {
    "appsNamespace": {
      "location": {
        "start": {
          "line": 68,
          "column": 4
        },
        "end": {
          "line": 71,
          "column": 5
        }
      },
      "name": "appsNamespace",
      "propertyType": "new",
      "check": "String"
    },
    "sourceDir": {
      "location": {
        "start": {
          "line": 73,
          "column": 4
        },
        "end": {
          "line": 76,
          "column": 5
        }
      },
      "name": "sourceDir",
      "propertyType": "new",
      "check": "String"
    },
    "targetDir": {
      "location": {
        "start": {
          "line": 78,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "name": "targetDir",
      "propertyType": "new",
      "check": "String"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__watcher": {
      "location": {
        "start": {
          "line": 86,
          "column": 4
        },
        "end": {
          "line": 86,
          "column": 19
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{chokidar} watcher"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__watcherReady": {
      "location": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 25
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} whether the watcher is ready yet"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__rebuildTimer": {
      "location": {
        "start": {
          "line": 92,
          "column": 4
        },
        "end": {
          "line": 92,
          "column": 24
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Integer} setTimeout timer ID for debouncing builds"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__rebuilding": {
      "location": {
        "start": {
          "line": 95,
          "column": 4
        },
        "end": {
          "line": 95,
          "column": 23
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Whether the build is currently taking place"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__needsRebuild": {
      "location": {
        "start": {
          "line": 98,
          "column": 4
        },
        "end": {
          "line": 98,
          "column": 25
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Whether a rebuild is needed ASAP"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "startWatcher": {
      "location": {
        "start": {
          "line": 103,
          "column": 4
        },
        "end": {
          "line": 131,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Starts the watcher for files in the source directory and compiles as needed</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "stopWatcher": {
      "location": {
        "start": {
          "line": 136,
          "column": 4
        },
        "end": {
          "line": 142,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Stops the watcher, if its running</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isWatching": {
      "location": {
        "start": {
          "line": 149,
          "column": 4
        },
        "end": {
          "line": 151,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the watcher is running</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} true if its running",
            "type": "Boolean",
            "description": " true if its running"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "waitForRebuildComplete": {
      "location": {
        "start": {
          "line": 156,
          "column": 4
        },
        "end": {
          "line": 160,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Waits for the rebuild process to complete, if it is running</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "rebuildAll": {
      "location": {
        "start": {
          "line": 165,
          "column": 4
        },
        "end": {
          "line": 168,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Rebuilds everything needed for the website</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__onFileChange": {
      "location": {
        "start": {
          "line": 176,
          "column": 4
        },
        "end": {
          "line": 184,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for changes to the source files</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "type {String} type of change, one of \"change\", \"add\", \"unlink\"",
            "paramName": "type",
            "description": " type of change, one of \"change\", \"add\", \"unlink\"",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "filename {String} the file that changed",
            "paramName": "filename",
            "description": " the file that changed",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "triggerRebuild": {
      "location": {
        "start": {
          "line": 194,
          "column": 4
        },
        "end": {
          "line": 225,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Triggers a rebuild of the website, asynchronously.  Unless immediate is true,\n the rebuild will only happen after a short delay; but each time this is called,\n the delay is restarted.  This is to allow multiple files to be changed without\n swamping the processor with compilations.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "immediate {Boolean?} if true, rebuild starts ASAP",
            "paramName": "immediate",
            "description": " if true, rebuild starts ASAP",
            "optional": true,
            "type": "Boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getPages": {
      "location": {
        "start": {
          "line": 236,
          "column": 4
        },
        "end": {
          "line": 273,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Metalsmith Plugin that collates a list of pages that are to be included in the site navigation\n into the metadata, along with their URLs.\n If the metadata has a <code>sites.pages</code>, then it is expected to be an array of URLs which indicates\n the ordering to be applied; <code>sites.pages</code> is replaced with an array of objects, one per page,\n that contains <code>url</code> and <code>title</code> properties.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "loadPartials": {
      "location": {
        "start": {
          "line": 281,
          "column": 4
        },
        "end": {
          "line": 315,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Metalsmith plugin that loads partials and adding them to the metadata.partials map.  Each file\n is added with its filename, and if it is a .html filename is also added without the .html\n extension.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "generateSite": {
      "location": {
        "start": {
          "line": 321,
          "column": 4
        },
        "end": {
          "line": 358,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates the site with Metalsmith</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise}",
            "type": "Promise",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "compileScss": {
      "location": {
        "start": {
          "line": 365,
          "column": 4
        },
        "end": {
          "line": 387,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compiles SCSS into CSS</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise}",
            "type": "Promise",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "buildDevtools": {
      "location": {
        "start": {
          "line": 393,
          "column": 4
        },
        "end": {
          "line": 419,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Build the development tool apps (APIViewer, Playground, Widgetbrowser, Demobrowser)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Promise<void>}",
            "type": "Promise<void>",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getAppsNamespace": {
      "type": "function",
      "name": "getAppsNamespace",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>appsNamespace</code>.\n\nFor further details take a look at the property definition: {@link #appsNamespace}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for appsNamespace"
          }
        ]
      }
    },
    "setAppsNamespace": {
      "type": "function",
      "name": "setAppsNamespace",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>appsNamespace</code>.\n\nFor further details take a look at the property definition: {@link #appsNamespace}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for appsNamespace"
          }
        ]
      }
    },
    "resetAppsNamespace": {
      "type": "function",
      "name": "resetAppsNamespace",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>appsNamespace</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #appsNamespace}."
          }
        ]
      }
    },
    "getSourceDir": {
      "type": "function",
      "name": "getSourceDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sourceDir</code>.\n\nFor further details take a look at the property definition: {@link #sourceDir}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for sourceDir"
          }
        ]
      }
    },
    "setSourceDir": {
      "type": "function",
      "name": "setSourceDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>sourceDir</code>.\n\nFor further details take a look at the property definition: {@link #sourceDir}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for sourceDir"
          }
        ]
      }
    },
    "resetSourceDir": {
      "type": "function",
      "name": "resetSourceDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>sourceDir</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #sourceDir}."
          }
        ]
      }
    },
    "getTargetDir": {
      "type": "function",
      "name": "getTargetDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>targetDir</code>.\n\nFor further details take a look at the property definition: {@link #targetDir}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for targetDir"
          }
        ]
      }
    },
    "setTargetDir": {
      "type": "function",
      "name": "setTargetDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>targetDir</code>.\n\nFor further details take a look at the property definition: {@link #targetDir}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for targetDir"
          }
        ]
      }
    },
    "resetTargetDir": {
      "type": "function",
      "name": "resetTargetDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>targetDir</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #targetDir}."
          }
        ]
      }
    }
  },
  "descendants": []
}