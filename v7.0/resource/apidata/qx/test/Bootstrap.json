{
  "className": "qx.test.Bootstrap",
  "packageName": "qx.test",
  "name": "Bootstrap",
  "superClass": "qx.dev.unit.TestCase",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0
      },
      "end": {
        "line": 417,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": ""
        }
      ],
      "@ignore": [
        {
          "name": "@ignore",
          "body": "qx.test.Construct.*, qx.test.ExtendError, qx.test.ExtendNull"
        },
        {
          "name": "@ignore",
          "body": "qx.test.ExtendQxObject, qx.test.ExtendSuper.*, qx.test.Super.*"
        },
        {
          "name": "@ignore",
          "body": "qx.test.ROOT, qx.test.MyClass.*, qx.test.Car, qx.test.Bmw.*"
        }
      ]
    }
  },
  "type": "class",
  "members": {
    "testDefineAnonymous": {
      "location": {
        "start": {
          "line": 31,
          "column": 4
        },
        "end": {
          "line": 47,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "testClassnameProperty": {
      "location": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 61,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "testAlternativeRoot": {
      "location": {
        "start": {
          "line": 64,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: merge methods of same class (statics optimization)": {
      "location": {
        "start": {
          "line": 83,
          "column": 4
        },
        "end": {
          "line": 104,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: merge methods of same class (statics optimization) respect defer": {
      "location": {
        "start": {
          "line": 106,
          "column": 4
        },
        "end": {
          "line": 132,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: define class with constructor": {
      "location": {
        "start": {
          "line": 134,
          "column": 4
        },
        "end": {
          "line": 151,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: define bootstrap class, which extends 'Error'": {
      "location": {
        "start": {
          "line": 154,
          "column": 4
        },
        "end": {
          "line": 164,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: extend from qx.core.Object": {
      "location": {
        "start": {
          "line": 167,
          "column": 4
        },
        "end": {
          "line": 179,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: extend from null should extend Object": {
      "location": {
        "start": {
          "line": 182,
          "column": 4
        },
        "end": {
          "line": 193,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: extend from Bootstrap class": {
      "location": {
        "start": {
          "line": 196,
          "column": 4
        },
        "end": {
          "line": 215,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: extended Bootstap class should append members to the prototype": {
      "location": {
        "start": {
          "line": 218,
          "column": 4
        },
        "end": {
          "line": 245,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "test: superclass calls aka basecalls (constructor and methods)": {
      "location": {
        "start": {
          "line": 247,
          "column": 4
        },
        "end": {
          "line": 327,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "testFunctionWrap": {
      "location": {
        "start": {
          "line": 329,
          "column": 4
        },
        "end": {
          "line": 357,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "testBindWithUndefinedArguments": {
      "location": {
        "start": {
          "line": 360,
          "column": 4
        },
        "end": {
          "line": 368,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "testDefineShadowedMembers": {
      "location": {
        "start": {
          "line": 371,
          "column": 4
        },
        "end": {
          "line": 393,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "testDefineShadowedStatics": {
      "location": {
        "start": {
          "line": 396,
          "column": 4
        },
        "end": {
          "line": 415,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTestResult": {
      "type": "function",
      "name": "getTestResult",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>testResult</code>.\n\nFor further details take a look at the property definition: {@link #testResult}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for testResult"
          }
        ]
      }
    },
    "setTestResult": {
      "type": "function",
      "name": "setTestResult",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>testResult</code>.\n\nFor further details take a look at the property definition: {@link #testResult}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for testResult"
          }
        ]
      }
    },
    "resetTestResult": {
      "type": "function",
      "name": "resetTestResult",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>testResult</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #testResult}."
          }
        ]
      }
    },
    "getTestFunc": {
      "type": "function",
      "name": "getTestFunc",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>testFunc</code>.\n\nFor further details take a look at the property definition: {@link #testFunc}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for testFunc"
          }
        ]
      }
    },
    "setTestFunc": {
      "type": "function",
      "name": "setTestFunc",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>testFunc</code>.\n\nFor further details take a look at the property definition: {@link #testFunc}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for testFunc"
          }
        ]
      }
    },
    "resetTestFunc": {
      "type": "function",
      "name": "resetTestFunc",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>testFunc</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #testFunc}."
          }
        ]
      }
    }
  },
  "events": {},
  "descendants": []
}