{
  "className": "qx.ui.menu.Manager",
  "packageName": "qx.ui.menu",
  "name": "Manager",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 29,
        "column": 0
      },
      "end": {
        "line": 928,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>This singleton manages visible menu instances and supports some\n core features to schedule menu open/close with timeout support.\n It also manages the whole keyboard support for the currently\n registered widgets.\n The zIndex order is also managed by this class.</p>"
        }
      ]
    }
  },
  "type": "class",
  "isAbstract": false,
  "isStatic": false,
  "isSingleton": true,
  "construct": {
    "location": {
      "start": {
        "line": 42,
        "column": 14
      },
      "end": {
        "line": 75,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "members": {
    "__scheduleOpen": {
      "location": {
        "start": {
          "line": 89,
          "column": 4
        },
        "end": {
          "line": 89,
          "column": 25
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__scheduleClose": {
      "location": {
        "start": {
          "line": 90,
          "column": 4
        },
        "end": {
          "line": 90,
          "column": 26
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__openTimer": {
      "location": {
        "start": {
          "line": 91,
          "column": 4
        },
        "end": {
          "line": 91,
          "column": 22
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__closeTimer": {
      "location": {
        "start": {
          "line": 92,
          "column": 4
        },
        "end": {
          "line": 92,
          "column": 23
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__objects": {
      "location": {
        "start": {
          "line": 93,
          "column": 4
        },
        "end": {
          "line": 93,
          "column": 20
        }
      },
      "type": "variable",
      "access": "private"
    },
    "_getChild": {
      "location": {
        "start": {
          "line": 113,
          "column": 4
        },
        "end": {
          "line": 140,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Query engine for menu children.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} Any menu instance",
            "paramName": "menu",
            "description": " Any menu instance",
            "type": "qx.ui.menu.Menu"
          },
          {
            "name": "@param",
            "body": "start {Integer} Child index to start with",
            "paramName": "start",
            "description": " Child index to start with",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "iter {Integer} Iteration count, normally <code>+1</code> or <code>-1</code>",
            "paramName": "iter",
            "description": " Iteration count, normally <code>+1</code> or <code>-1</code>",
            "type": "Integer"
          },
          {
            "name": "@param",
            "body": "loop {Boolean?false} Whether to wrap when reaching the begin/end of the list",
            "paramName": "loop",
            "description": " Whether to wrap when reaching the begin/end of the list",
            "optional": true,
            "defaultValue": "false",
            "type": "Boolean"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.menu.Button} Any menu button or <code>null</code>",
            "type": "qx.ui.menu.Button",
            "description": " Any menu button or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_isInMenu": {
      "location": {
        "start": {
          "line": 149,
          "column": 4
        },
        "end": {
          "line": 161,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given widget is inside any Menu instance.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Any widget",
            "paramName": "widget",
            "description": " Any widget",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> when the widget is part of any menu",
            "type": "Boolean",
            "description": " <code>true</code> when the widget is part of any menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_isMenuOpener": {
      "location": {
        "start": {
          "line": 170,
          "column": 4
        },
        "end": {
          "line": 181,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether the given widget is one of the menu openers.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} Any widget",
            "paramName": "widget",
            "description": " Any widget",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean} <code>true</code> if the widget is a menu opener",
            "type": "Boolean",
            "description": " <code>true</code> if the widget is a menu opener"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_getMenuButton": {
      "location": {
        "start": {
          "line": 190,
          "column": 4
        },
        "end": {
          "line": 202,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns an instance of a menu button if the given widget is a child</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "widget {qx.ui.core.Widget} any widget",
            "paramName": "widget",
            "description": " any widget",
            "type": "qx.ui.core.Widget"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.menu.Button} Any menu button instance or <code>null</code>",
            "type": "qx.ui.menu.Button",
            "description": " Any menu button instance or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "add": {
      "location": {
        "start": {
          "line": 216,
          "column": 4
        },
        "end": {
          "line": 228,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a menu to the list of visible menus.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.ui.menu.Menu} Any menu instance.",
            "paramName": "obj",
            "description": " Any menu instance.",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "remove": {
      "location": {
        "start": {
          "line": 236,
          "column": 4
        },
        "end": {
          "line": 249,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Remove a menu from the list of visible menus.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {qx.ui.menu.Menu} Any menu instance.",
            "paramName": "obj",
            "description": " Any menu instance.",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "hideAll": {
      "location": {
        "start": {
          "line": 255,
          "column": 4
        },
        "end": {
          "line": 264,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Hides all currently opened menus.</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getActiveMenu": {
      "location": {
        "start": {
          "line": 273,
          "column": 4
        },
        "end": {
          "line": 277,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the menu which was opened at last (which\n is the active one this way)</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.ui.menu.Menu} The current active menu or <code>null</code>",
            "type": "qx.ui.menu.Menu",
            "description": " The current active menu or <code>null</code>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scheduleOpen": {
      "location": {
        "start": {
          "line": 295,
          "column": 4
        },
        "end": {
          "line": 317,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Schedules the given menu to be opened after the\n {@link qx.ui.menu.Menu#openInterval} configured by the\n menu instance itself.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to schedule for open",
            "paramName": "menu",
            "description": " The menu to schedule for open",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "scheduleClose": {
      "location": {
        "start": {
          "line": 327,
          "column": 4
        },
        "end": {
          "line": 349,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Schedules the given menu to be closed after the\n {@link qx.ui.menu.Menu#closeInterval} configured by the\n menu instance itself.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to schedule for close",
            "paramName": "menu",
            "description": " The menu to schedule for close",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cancelOpen": {
      "location": {
        "start": {
          "line": 358,
          "column": 4
        },
        "end": {
          "line": 366,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>When the given menu is scheduled for open this pending\n request is canceled.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to cancel for open",
            "paramName": "menu",
            "description": " The menu to cancel for open",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "cancelClose": {
      "location": {
        "start": {
          "line": 375,
          "column": 4
        },
        "end": {
          "line": 383,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>When the given menu is scheduled for close this pending\n request is canceled.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The menu to cancel for close",
            "paramName": "menu",
            "description": " The menu to cancel for close",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_onOpenInterval": {
      "location": {
        "start": {
          "line": 398,
          "column": 4
        },
        "end": {
          "line": 406,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for a pending open request. Configured to the interval\n of the current menu to open.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Interval event",
            "paramName": "e",
            "description": " Interval event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onCloseInterval": {
      "location": {
        "start": {
          "line": 415,
          "column": 4
        },
        "end": {
          "line": 423,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event listener for a pending close request. Configured to the interval\n of the current menu to close.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Event} Interval event",
            "paramName": "e",
            "description": " Interval event",
            "type": "qx.event.type.Event"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "preventContextMenuOnce": {
      "location": {
        "start": {
          "line": 441,
          "column": 4
        },
        "end": {
          "line": 444,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal function registers a handler to stop next\n <code>contextmenu</code> event.\n This function will be called by {@link qx.ui.menu.Button#_onTap}, if\n right click was pressed.</p>"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__onPreventContextMenu": {
      "location": {
        "start": {
          "line": 455,
          "column": 4
        },
        "end": {
          "line": 466,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Internal event handler to stop <code>contextmenu</code> event bubbling,\n if target is inside the opened menu.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Mouse} contextmenu event",
            "paramName": "e",
            "description": " contextmenu event",
            "type": "qx.event.type.Mouse"
          }
        ],
        "@internal": [
          {
            "name": "@internal",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_onPointerDown": {
      "location": {
        "start": {
          "line": 480,
          "column": 4
        },
        "end": {
          "line": 505,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for pointerdown events</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Pointer} pointerdown event",
            "paramName": "e",
            "description": " pointerdown event",
            "type": "qx.event.type.Pointer"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "__selectionKeys": {
      "location": {
        "start": {
          "line": 518,
          "column": 4
        },
        "end": {
          "line": 522,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Map of all keys working on an active menu selection"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__selectionKeys)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__navigationKeys": {
      "location": {
        "start": {
          "line": 529,
          "column": 4
        },
        "end": {
          "line": 537,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} Map of all keys working without a selection"
          }
        ],
        "@lint": [
          {
            "name": "@lint",
            "body": "ignoreReferenceField(__navigationKeys)"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "_onKeyUpDown": {
      "location": {
        "start": {
          "line": 546,
          "column": 4
        },
        "end": {
          "line": 558,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for all keyup/keydown events. Stops all events\n when any menu is opened.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} Keyboard event",
            "paramName": "e",
            "description": " Keyboard event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPress": {
      "location": {
        "start": {
          "line": 570,
          "column": 4
        },
        "end": {
          "line": 631,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for all keypress events. Delegates the event to the more\n specific methods defined in this class.\n Currently processes the keys: <code>Up</code>, <code>Down</code>,\n <code>Left</code>, <code>Right</code> and <code>Enter</code>.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} Keyboard event",
            "paramName": "e",
            "description": " Keyboard event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressUp": {
      "location": {
        "start": {
          "line": 639,
          "column": 4
        },
        "end": {
          "line": 653,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Up</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressDown": {
      "location": {
        "start": {
          "line": 661,
          "column": 4
        },
        "end": {
          "line": 674,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Down</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressLeft": {
      "location": {
        "start": {
          "line": 682,
          "column": 4
        },
        "end": {
          "line": 725,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Left</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressRight": {
      "location": {
        "start": {
          "line": 733,
          "column": 4
        },
        "end": {
          "line": 831,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Right</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressEnter": {
      "location": {
        "start": {
          "line": 841,
          "column": 4
        },
        "end": {
          "line": 857,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Enter</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          },
          {
            "name": "@param",
            "body": "button {qx.ui.menu.AbstractButton} The selected button",
            "paramName": "button",
            "description": " The selected button",
            "type": "qx.ui.menu.AbstractButton"
          },
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} The keypress event",
            "paramName": "e",
            "description": " The keypress event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onKeyPressSpace": {
      "location": {
        "start": {
          "line": 867,
          "column": 4
        },
        "end": {
          "line": 880,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for <code>Space</code> key</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "menu {qx.ui.menu.Menu} The active menu",
            "paramName": "menu",
            "description": " The active menu",
            "type": "qx.ui.menu.Menu"
          },
          {
            "name": "@param",
            "body": "button {qx.ui.menu.AbstractButton} The selected button",
            "paramName": "button",
            "description": " The selected button",
            "type": "qx.ui.menu.AbstractButton"
          },
          {
            "name": "@param",
            "body": "e {qx.event.type.KeySequence} The keypress event",
            "paramName": "e",
            "description": " The keypress event",
            "type": "qx.event.type.KeySequence"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_onRoll": {
      "location": {
        "start": {
          "line": 888,
          "column": 4
        },
        "end": {
          "line": 900,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Event handler for roll which hides all windows on scroll.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "e {qx.event.type.Roll} The roll event.",
            "paramName": "e",
            "description": " The roll event.",
            "type": "qx.event.type.Roll"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "destruct": {
    "location": {
      "start": {
        "line": 912,
        "column": 13
      },
      "end": {
        "line": 927,
        "column": 3
      }
    },
    "jsdoc": {}
  },
  "descendants": []
}