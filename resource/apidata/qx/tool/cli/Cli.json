{
  "className": "qx.tool.cli.Cli",
  "packageName": "qx.tool.cli",
  "name": "Cli",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0,
        "index": 611
      },
      "end": {
        "line": 701,
        "column": 3,
        "index": 21377
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Entry point for the CLI</p>"
        }
      ]
    }
  },
  "type": "class",
  "properties": {
    "command": {
      "location": {
        "start": {
          "line": 29,
          "column": 4,
          "index": 694
        },
        "end": {
          "line": 31,
          "column": 5,
          "index": 740
        }
      },
      "name": "command",
      "propertyType": "new",
      "apply": "__P_366_0"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "construct": {
    "location": {
      "start": {
        "line": 34,
        "column": 2,
        "index": 749
      },
      "end": {
        "line": 42,
        "column": 3,
        "index": 1006
      }
    }
  },
  "members": {
    "yargs": {
      "location": {
        "start": {
          "line": 46,
          "column": 4,
          "index": 1078
        },
        "end": {
          "line": 46,
          "column": 15,
          "index": 1089
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{yargs} the current yargs instance"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "argv": {
      "location": {
        "start": {
          "line": 49,
          "column": 4,
          "index": 1139
        },
        "end": {
          "line": 49,
          "column": 14,
          "index": 1149
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Object} the current argv"
          }
        ]
      },
      "type": "variable",
      "access": "public"
    },
    "_compilerApi": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1212
        },
        "end": {
          "line": 52,
          "column": 22,
          "index": 1230
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{CompilerApi} the CompilerApi instance"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_compileJsFilename": {
      "location": {
        "start": {
          "line": 55,
          "column": 4,
          "index": 1304
        },
        "end": {
          "line": 55,
          "column": 28,
          "index": 1328
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} the compile.js filename, if there is one"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "_compileJsonFilename": {
      "location": {
        "start": {
          "line": 58,
          "column": 4,
          "index": 1404
        },
        "end": {
          "line": 58,
          "column": 30,
          "index": 1430
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{String} the compile.json filename, if there is one"
          }
        ]
      },
      "type": "variable",
      "access": "protected"
    },
    "__parsedArgs": {
      "location": {
        "start": {
          "line": 61,
          "column": 4,
          "index": 1480
        },
        "end": {
          "line": 61,
          "column": 22,
          "index": 1498
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Object} Parsed arguments"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__librariesNotified": {
      "location": {
        "start": {
          "line": 64,
          "column": 4,
          "index": 1593
        },
        "end": {
          "line": 64,
          "column": 30,
          "index": 1619
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Boolean} Whether libraries have had their <code>.load()</code> method called yet"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__applyCommand": {
      "location": {
        "start": {
          "line": 66,
          "column": 4,
          "index": 1626
        },
        "end": {
          "line": 69,
          "column": 5,
          "index": 1751
        }
      },
      "type": "function",
      "access": "private"
    },
    "__createYargs": {
      "location": {
        "start": {
          "line": 76,
          "column": 4,
          "index": 1862
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 2984
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates an instance of yargs, with minimal options</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{yargs}",
            "type": "yargs",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__bootstrapArgv": {
      "location": {
        "start": {
          "line": 121,
          "column": 4,
          "index": 3120
        },
        "end": {
          "line": 145,
          "column": 5,
          "index": 3941
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initialises this.argv with the bare minimum required to load the config files and begin\n processing</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__fullArgv": {
      "location": {
        "start": {
          "line": 150,
          "column": 4,
          "index": 4020
        },
        "end": {
          "line": 207,
          "column": 5,
          "index": 5525
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Reloads this.argv with the full set of arguments</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__notifyCommand": {
      "location": {
        "start": {
          "line": 214,
          "column": 4,
          "index": 5726
        },
        "end": {
          "line": 219,
          "column": 5,
          "index": 5887
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>This is to notify the commands after loading the full args.\n The commands can overload special arg arguments here.\n e.g. Deploy will will overload the target.</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__notifyLibraries": {
      "location": {
        "start": {
          "line": 226,
          "column": 4,
          "index": 6110
        },
        "end": {
          "line": 240,
          "column": 5,
          "index": 6491
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calls the <code>.load()</code> method of each library, safe to call multiple times.  This is\n to delay the calling of <code>load()</code> until after we know that the command has been selected\n by Yargs</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "processCommand": {
      "location": {
        "start": {
          "line": 249,
          "column": 4,
          "index": 6805
        },
        "end": {
          "line": 255,
          "column": 5,
          "index": 7083
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Processes a command.  All commands should use this method when invoked by Yargs, because it\n provides a standard error control and makes sure that the libraries know what command has\n been selected.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "command {qx.tool.cli.Command} the command being run",
            "paramName": "command",
            "description": " the command being run",
            "type": "qx.tool.cli.Command"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getParsedArgs": {
      "location": {
        "start": {
          "line": 262,
          "column": 4,
          "index": 7199
        },
        "end": {
          "line": 264,
          "column": 5,
          "index": 7254
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the parsed command line and configuration data</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object}",
            "type": "Object",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "run": {
      "location": {
        "start": {
          "line": 281,
          "column": 4,
          "index": 7879
        },
        "end": {
          "line": 287,
          "column": 5,
          "index": 8097
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Parses the command line and loads configuration data from a .js or .json file;\n if you provide a .js file the file must be a module which returns an object which\n has any of these properties:\n  CompilerApi - the class (derived from qx.tool.cli.api.CompilerApi)\n    for configuring the compiler\n Each library can also have a compile.js, and that is also a module which can\n return an object with any of these properties:\n  LibraryApi - the class (derived from qx.tool.cli.api.LibraryApi)\n    for configuring the library</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__parseArgsImpl": {
      "location": {
        "start": {
          "line": 292,
          "column": 4,
          "index": 8204
        },
        "end": {
          "line": 573,
          "column": 5,
          "index": 17968
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Does the work of parsing command line arguments and loading <code>compile.js[on]</code></p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "__loadJs": {
      "location": {
        "start": {
          "line": 581,
          "column": 4,
          "index": 18160
        },
        "end": {
          "line": 609,
          "column": 5,
          "index": 18965
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Loads a .js file using <code>require</code>, handling exceptions as best as possible</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "aPath {String} the file to load",
            "paramName": "aPath",
            "description": " the file to load",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} the module",
            "type": "Object",
            "description": " the module"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getCompilerApi": {
      "location": {
        "start": {
          "line": 616,
          "column": 4,
          "index": 19064
        },
        "end": {
          "line": 618,
          "column": 5,
          "index": 19120
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the CompilerApi instance</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{CompilerApi}",
            "type": "CompilerApi",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCompileJsFilename": {
      "location": {
        "start": {
          "line": 625,
          "column": 4,
          "index": 19243
        },
        "end": {
          "line": 627,
          "column": 5,
          "index": 19311
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the filename of compile.js, if there is one</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String?} filename",
            "type": "String?",
            "description": " filename"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCompileJsonFilename": {
      "location": {
        "start": {
          "line": 634,
          "column": 4,
          "index": 19436
        },
        "end": {
          "line": 636,
          "column": 5,
          "index": 19508
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the filename of compile.json, if there is one</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String?} filename",
            "type": "String?",
            "description": " filename"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isExplicitArg": {
      "location": {
        "start": {
          "line": 646,
          "column": 4,
          "index": 19835
        },
        "end": {
          "line": 651,
          "column": 5,
          "index": 20041
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether the command line explicit set an option (as opposed to yargs\n providing a default value).  Note that this does not handle aliases, use the\n actual, full option name.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "option {String} the name of the option, eg \"listen-port\"",
            "paramName": "option",
            "description": " the name of the option, eg \"listen-port\"",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Boolean}",
            "type": "Boolean",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getCommand": {
      "type": "function",
      "name": "getCommand",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>command</code>.\n\nFor further details take a look at the property definition: {@link #command}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for command"
          }
        ]
      }
    },
    "setCommand": {
      "type": "function",
      "name": "setCommand",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>command</code>.\n\nFor further details take a look at the property definition: {@link #command}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for command"
          }
        ]
      }
    },
    "resetCommand": {
      "type": "function",
      "name": "resetCommand",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>command</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #command}."
          }
        ]
      }
    }
  },
  "statics": {
    "compileJsFilename": {
      "location": {
        "start": {
          "line": 655,
          "column": 4,
          "index": 20065
        },
        "end": {
          "line": 655,
          "column": 35,
          "index": 20096
        }
      },
      "type": "variable",
      "access": "public"
    },
    "__instance": {
      "location": {
        "start": {
          "line": 658,
          "column": 4,
          "index": 20145
        },
        "end": {
          "line": 658,
          "column": 20,
          "index": 20161
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{CompileJs} singleton instance</p>"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "getInstance": {
      "location": {
        "start": {
          "line": 665,
          "column": 4,
          "index": 20306
        },
        "end": {
          "line": 670,
          "column": 5,
          "index": 20485
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the singleton instance, throws an error if it has not been created</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{qx.tool.cli.Cli}",
            "type": "qx.tool.cli.Cli",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addYargsCommands": {
      "location": {
        "start": {
          "line": 679,
          "column": 4,
          "index": 20782
        },
        "end": {
          "line": 699,
          "column": 5,
          "index": 21369
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds commands to Yargs</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "yargs {yargs} the Yargs instance",
            "paramName": "yargs",
            "description": " the Yargs instance",
            "type": "yargs"
          },
          {
            "name": "@param",
            "body": "classNames {String[]} array of class names, each of which is in the <code>packageName</code> package",
            "paramName": "classNames",
            "description": " array of class names, each of which is in the <code>packageName</code> package",
            "type": "String[]"
          },
          {
            "name": "@param",
            "body": "packageName {String} the name of the package to find each command class",
            "paramName": "packageName",
            "description": " the name of the package to find each command class",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}