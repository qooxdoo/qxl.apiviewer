{
  "className": "qx.test.performance.decorator.AbstractDecorator",
  "packageName": "qx.test.performance.decorator",
  "name": "AbstractDecorator",
  "superClass": "qx.dev.unit.TestCase",
  "interfaces": [],
  "mixins": [
    "qx.dev.unit.MMeasure"
  ],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 105,
        "column": 3
      }
    }
  },
  "type": "class",
  "isAbstract": true,
  "isStatic": false,
  "isSingleton": false,
  "members": {
    "CREATE_ITTERATIONS": {
      "location": {
        "start": {
          "line": 9,
          "column": 4
        },
        "end": {
          "line": 9,
          "column": 29
        }
      },
      "type": "variable",
      "access": "public"
    },
    "RENDER_ITTERATIONS": {
      "location": {
        "start": {
          "line": 10,
          "column": 4
        },
        "end": {
          "line": 10,
          "column": 29
        }
      },
      "type": "variable",
      "access": "public"
    },
    "RESIZE_ITTERATIONS": {
      "location": {
        "start": {
          "line": 11,
          "column": 4
        },
        "end": {
          "line": 11,
          "column": 30
        }
      },
      "type": "variable",
      "access": "public"
    },
    "__el": {
      "location": {
        "start": {
          "line": 13,
          "column": 4
        },
        "end": {
          "line": 13,
          "column": 15
        }
      },
      "type": "variable",
      "access": "private"
    },
    "setUp": {
      "location": {
        "start": {
          "line": 16,
          "column": 4
        },
        "end": {
          "line": 20,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "tearDown": {
      "location": {
        "start": {
          "line": 22,
          "column": 4
        },
        "end": {
          "line": 25,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "createDivs": {
      "location": {
        "start": {
          "line": 27,
          "column": 4
        },
        "end": {
          "line": 44,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "createDecorator": {
      "location": {
        "start": {
          "line": 47,
          "column": 4
        },
        "end": {
          "line": 49,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "testCreate": {
      "location": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 64,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "testRender": {
      "location": {
        "start": {
          "line": 67,
          "column": 4
        },
        "end": {
          "line": 81,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "testResize": {
      "location": {
        "start": {
          "line": 84,
          "column": 4
        },
        "end": {
          "line": 103,
          "column": 5
        }
      },
      "type": "function",
      "access": "public"
    },
    "measureRepeated": {
      "type": "function",
      "name": "measureRepeated",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MMeasure",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Repeatedly runs code and measures execution and rendering times</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "msg {String} Description of the measured operation",
            "paramName": "msg",
            "description": " Description of the measured operation",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "callback {Function} Callback containing the code to be measured",
            "paramName": "callback",
            "description": " Callback containing the code to be measured",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "finalize {Function} Finalize function called once after measuring,\n e.g. for cleanup. Will not be measured.",
            "paramName": "finalize",
            "description": " Finalize function called once after measuring,\n e.g. for cleanup. Will not be measured.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "iterations {Number} Number of times to execute the callback",
            "paramName": "iterations",
            "description": " Number of times to execute the callback",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "displayIterations {Number?} Iterations to be displayed instead of\n <code>iterations</code>",
            "paramName": "displayIterations",
            "description": " Iterations to be displayed instead of\n <code>iterations</code>",
            "optional": true,
            "type": "Number"
          }
        ]
      }
    },
    "measureIterations": {
      "type": "function",
      "name": "measureIterations",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MMeasure",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Repeatedly runs code for a given amount of time and measures completed\n iterations</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "msg {String} Description of the measured operation",
            "paramName": "msg",
            "description": " Description of the measured operation",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "prepare {Function} A function that will be called before every\n iteration. Its execution time is not included in the measurement",
            "paramName": "prepare",
            "description": " A function that will be called before every\n iteration. Its execution time is not included in the measurement",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "callback {Function} Callback containing the code to be measured.\n Must return the number of completed iterations.",
            "paramName": "callback",
            "description": " Callback containing the code to be measured.\n Must return the number of completed iterations.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "finalize {Function} Finalize function called once after measuring,\n e.g. for cleanup. Will not be measured.",
            "paramName": "finalize",
            "description": " Finalize function called once after measuring,\n e.g. for cleanup. Will not be measured.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "time {Number} Amount of time in milliseconds",
            "paramName": "time",
            "description": " Amount of time in milliseconds",
            "type": "Number"
          }
        ]
      }
    },
    "measure": {
      "type": "function",
      "name": "measure",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MMeasure",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Executes a given callback function once and measures JavaScript execution\n and rendering time</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "msg {String} Description of the measured operation",
            "paramName": "msg",
            "description": " Description of the measured operation",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "callback {Function} Callback containing the code to be measured",
            "paramName": "callback",
            "description": " Callback containing the code to be measured",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "finalize {Function} Finalize function called once after measuring,\n e.g. for cleanup. Will not be measured.",
            "paramName": "finalize",
            "description": " Finalize function called once after measuring,\n e.g. for cleanup. Will not be measured.",
            "type": "Function"
          },
          {
            "name": "@param",
            "body": "displayIterations {Number?} Iterations to be displayed instead of\n <code>iterations</code>",
            "paramName": "displayIterations",
            "description": " Iterations to be displayed instead of\n <code>iterations</code>",
            "optional": true,
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "maxTime {Number?} Maximum amount of time the test will run. Only used\n for {@link #measureIterations}. If undefined, the test will be aborted after\n ten seconds.",
            "paramName": "maxTime",
            "description": " Maximum amount of time the test will run. Only used\n for {@link #measureIterations}. If undefined, the test will be aborted after\n ten seconds.",
            "optional": true,
            "type": "Number"
          }
        ]
      }
    },
    "log": {
      "type": "function",
      "name": "log",
      "abstract": false,
      "mixin": true,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.MMeasure",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Logs a single measurement result</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "msg {String} Description of the measured operation",
            "paramName": "msg",
            "description": " Description of the measured operation",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "iterations {Number} Number of iterations",
            "paramName": "iterations",
            "description": " Number of iterations",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "ownTime {Number} JavaScript execution time in ms",
            "paramName": "ownTime",
            "description": " JavaScript execution time in ms",
            "type": "Number"
          },
          {
            "name": "@param",
            "body": "renderTime {Number} Dom rendering time in ms",
            "paramName": "renderTime",
            "description": " Dom rendering time in ms",
            "type": "Number"
          }
        ]
      }
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getTestResult": {
      "type": "function",
      "name": "getTestResult",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>testResult</code>.\n\nFor further details take a look at the property definition: {@link #testResult}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for testResult"
          }
        ]
      }
    },
    "setTestResult": {
      "type": "function",
      "name": "setTestResult",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>testResult</code>.\n\nFor further details take a look at the property definition: {@link #testResult}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for testResult"
          }
        ]
      }
    },
    "resetTestResult": {
      "type": "function",
      "name": "resetTestResult",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>testResult</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #testResult}."
          }
        ]
      }
    },
    "getTestFunc": {
      "type": "function",
      "name": "getTestFunc",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>testFunc</code>.\n\nFor further details take a look at the property definition: {@link #testFunc}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for testFunc"
          }
        ]
      }
    },
    "setTestFunc": {
      "type": "function",
      "name": "setTestFunc",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>testFunc</code>.\n\nFor further details take a look at the property definition: {@link #testFunc}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for testFunc"
          }
        ]
      }
    },
    "resetTestFunc": {
      "type": "function",
      "name": "resetTestFunc",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.dev.unit.TestCase",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>testFunc</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #testFunc}."
          }
        ]
      }
    }
  },
  "events": {},
  "descendants": [
    "qx.test.performance.decorator.Background",
    "qx.test.performance.decorator.BackgroundScale",
    "qx.test.performance.decorator.Beveled",
    "qx.test.performance.decorator.Grid",
    "qx.test.performance.decorator.Single"
  ]
}