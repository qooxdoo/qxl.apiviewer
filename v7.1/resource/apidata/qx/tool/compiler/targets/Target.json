{
  "className": "qx.tool.compiler.targets.Target",
  "packageName": "qx.tool.compiler.targets",
  "name": "Target",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 31,
        "column": 0,
        "index": 954
      },
      "end": {
        "line": 1019,
        "column": 3,
        "index": 31453
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>A target for building an application, instances of Target control the generation of transpiled\n source and collection into an application, including minifying etc</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 38,
        "column": 2,
        "index": 1113
      },
      "end": {
        "line": 41,
        "column": 3,
        "index": 1186
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Constructor</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "outputDir {String} output directory",
          "paramName": "outputDir",
          "description": " output directory",
          "type": "String"
        }
      ]
    }
  },
  "properties": {
    "type": {
      "location": {
        "start": {
          "line": 45,
          "column": 4,
          "index": 1240
        },
        "end": {
          "line": 49,
          "column": 5,
          "index": 1331
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Type of compilation</p>"
          }
        ]
      },
      "name": "type",
      "propertyType": "new",
      "nullable": false,
      "init": "source",
      "allowNull": false,
      "possibleValues": [
        "source",
        "build"
      ],
      "defaultValue": "source"
    },
    "outputDir": {
      "location": {
        "start": {
          "line": 52,
          "column": 4,
          "index": 1404
        },
        "end": {
          "line": 57,
          "column": 5,
          "index": 1529
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Output directory (guaranteed to have a trailing slash)</p>"
          }
        ]
      },
      "name": "outputDir",
      "propertyType": "new",
      "nullable": false,
      "init": "output",
      "transform": "_transformOutputDir",
      "allowNull": false,
      "check": "String",
      "defaultValue": "output"
    },
    "generateIndexHtml": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1594
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1661
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to generate the index.html</p>"
          }
        ]
      },
      "name": "generateIndexHtml",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "environment": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1716
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 1775
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Environment property map</p>"
          }
        ]
      },
      "name": "environment",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true
    },
    "defaultEnvironment": {
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 1850
        },
        "end": {
          "line": 82,
          "column": 5,
          "index": 1941
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Target type default environment property map</p>"
          }
        ]
      },
      "name": "defaultEnvironment",
      "propertyType": "new",
      "inheritable": true,
      "nullable": true,
      "allowNull": true
    },
    "preserveEnvironment": {
      "location": {
        "start": {
          "line": 88,
          "column": 4,
          "index": 2091
        },
        "end": {
          "line": 92,
          "column": 5,
          "index": 2180
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>List of environment keys to preserve in code, ie reserve for runtime detection\n and exclude from code elimination</p>"
          }
        ]
      },
      "name": "preserveEnvironment",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "Array"
    },
    "analyser": {
      "location": {
        "start": {
          "line": 97,
          "column": 4,
          "index": 2239
        },
        "end": {
          "line": 99,
          "column": 5,
          "index": 2278
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The analyser being generated</p>"
          }
        ]
      },
      "name": "analyser",
      "propertyType": "new",
      "nullable": false,
      "allowNull": false
    },
    "inlineExternalScripts": {
      "location": {
        "start": {
          "line": 104,
          "column": 4,
          "index": 2343
        },
        "end": {
          "line": 107,
          "column": 5,
          "index": 2415
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to inline external scripts</p>"
          }
        ]
      },
      "name": "inlineExternalScripts",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "addTimestampsToUrls": {
      "location": {
        "start": {
          "line": 112,
          "column": 4,
          "index": 2499
        },
        "end": {
          "line": 115,
          "column": 5,
          "index": 2568
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to add timestamps to all URLs (cache busting)</p>"
          }
        ]
      },
      "name": "addTimestampsToUrls",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "locales": {
      "location": {
        "start": {
          "line": 118,
          "column": 4,
          "index": 2610
        },
        "end": {
          "line": 122,
          "column": 5,
          "index": 2706
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Locales being generated</p>"
          }
        ]
      },
      "name": "locales",
      "propertyType": "new",
      "nullable": false,
      "init": [
        "en"
      ],
      "transform": "_transformLocales",
      "allowNull": false,
      "defaultValue": [
        "en"
      ]
    },
    "i18nAsParts": {
      "location": {
        "start": {
          "line": 125,
          "column": 4,
          "index": 2791
        },
        "end": {
          "line": 129,
          "column": 5,
          "index": 2876
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to break locale &amp; translation data out into separate parts</p>"
          }
        ]
      },
      "name": "i18nAsParts",
      "propertyType": "new",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "writeAllTranslations": {
      "location": {
        "start": {
          "line": 132,
          "column": 4,
          "index": 2982
        },
        "end": {
          "line": 136,
          "column": 5,
          "index": 3076
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to write all translation strings (as opposed to just those used by the classes)</p>"
          }
        ]
      },
      "name": "writeAllTranslations",
      "propertyType": "new",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "updatePoFiles": {
      "location": {
        "start": {
          "line": 139,
          "column": 4,
          "index": 3150
        },
        "end": {
          "line": 143,
          "column": 5,
          "index": 3237
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to update the source .po files with new strings</p>"
          }
        ]
      },
      "name": "updatePoFiles",
      "propertyType": "new",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "libraryPoPolicy": {
      "location": {
        "start": {
          "line": 146,
          "column": 4,
          "index": 3298
        },
        "end": {
          "line": 149,
          "column": 5,
          "index": 3391
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>What to do with library transation strings</p>"
          }
        ]
      },
      "name": "libraryPoPolicy",
      "propertyType": "new",
      "init": "ignore",
      "possibleValues": [
        "ignore",
        "untranslated",
        "all"
      ],
      "defaultValue": "ignore"
    },
    "writeCompileInfo": {
      "location": {
        "start": {
          "line": 155,
          "column": 4,
          "index": 3627
        },
        "end": {
          "line": 159,
          "column": 5,
          "index": 3717
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to write a summary of the compile info to disk, ie everything about dependencies and\n resources that are used to create the index.js file, but stored as pure JSON for third party code\n to use.</p>"
          }
        ]
      },
      "name": "writeCompileInfo",
      "propertyType": "new",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "writeLibraryInfo": {
      "location": {
        "start": {
          "line": 164,
          "column": 4,
          "index": 3817
        },
        "end": {
          "line": 168,
          "column": 5,
          "index": 3906
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to write information about the libraries into the boot script</p>"
          }
        ]
      },
      "name": "writeLibraryInfo",
      "propertyType": "new",
      "nullable": false,
      "init": true,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": true
    },
    "sourceMapRelativePaths": {
      "location": {
        "start": {
          "line": 173,
          "column": 4,
          "index": 3981
        },
        "end": {
          "line": 177,
          "column": 5,
          "index": 4077
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether to use relative paths in source maps</p>"
          }
        ]
      },
      "name": "sourceMapRelativePaths",
      "propertyType": "new",
      "nullable": false,
      "init": false,
      "allowNull": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "events": {
    "checkEnvironment": {
      "location": {
        "start": {
          "line": 187,
          "column": 4,
          "index": 4407
        },
        "end": {
          "line": 187,
          "column": 42,
          "index": 4445
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired after all enviroment data is collected, but before compilation begins; this\n is an  opportunity to adjust the environment for the target.  The event data contains:\n  application {qx.tool.compiler.app.Application} the app\n  enviroment: {Object} enviroment data</p>"
          }
        ]
      },
      "name": "checkEnvironment",
      "type": "qx.event.type.Data"
    },
    "writingApplication": {
      "location": {
        "start": {
          "line": 194,
          "column": 4,
          "index": 4675
        },
        "end": {
          "line": 194,
          "column": 45,
          "index": 4716
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when an application is about to be serialized to disk; the appMeta is fully\n populated, and this is an opportunity to amend the meta data before it is serialized\n into files on disk</p>"
          }
        ]
      },
      "name": "writingApplication",
      "type": "qx.event.type.Event"
    },
    "writtenApplication": {
      "location": {
        "start": {
          "line": 199,
          "column": 4,
          "index": 4800
        },
        "end": {
          "line": 199,
          "column": 45,
          "index": 4841
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Fired when an application has been serialized to disk</p>"
          }
        ]
      },
      "name": "writtenApplication",
      "type": "qx.event.type.Event"
    }
  },
  "members": {
    "__pathMappings": {
      "location": {
        "start": {
          "line": 204,
          "column": 4,
          "index": 4911
        },
        "end": {
          "line": 204,
          "column": 24,
          "index": 4931
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{Map} maps filenames to uris"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "__appMeta": {
      "location": {
        "start": {
          "line": 207,
          "column": 4,
          "index": 5031
        },
        "end": {
          "line": 207,
          "column": 19,
          "index": 5046
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": ""
          }
        ],
        "@type": [
          {
            "name": "@type",
            "body": "{qx.tool.compiler.targets.meta.ApplicationMeta} for the current application"
          }
        ]
      },
      "type": "variable",
      "access": "private"
    },
    "open": {
      "location": {
        "start": {
          "line": 212,
          "column": 4,
          "index": 5125
        },
        "end": {
          "line": 212,
          "column": 19,
          "index": 5140
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Initialises the target, creating directories etc</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_transformOutputDir": {
      "location": {
        "start": {
          "line": 221,
          "column": 4,
          "index": 5298
        },
        "end": {
          "line": 228,
          "column": 5,
          "index": 5459
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Transforms outputDir so that it always includes a trailing slash</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value",
            "paramName": "value",
            "type": ""
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{*}",
            "type": "*",
            "description": ""
          }
        ],
        "@private": [
          {
            "name": "@private",
            "body": ""
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getApplicationRoot": {
      "location": {
        "start": {
          "line": 233,
          "column": 4,
          "index": 5523
        },
        "end": {
          "line": 237,
          "column": 5,
          "index": 5664
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the root for applications</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getProjectDir": {
      "location": {
        "start": {
          "line": 244,
          "column": 4,
          "index": 5748
        },
        "end": {
          "line": 246,
          "column": 5,
          "index": 5849
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the project dir</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_getOutputRootUri": {
      "location": {
        "start": {
          "line": 251,
          "column": 4,
          "index": 5951
        },
        "end": {
          "line": 255,
          "column": 5,
          "index": 6136
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the URI for the root of the output, relative to the application</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "addPathMapping": {
      "location": {
        "start": {
          "line": 264,
          "column": 4,
          "index": 6400
        },
        "end": {
          "line": 270,
          "column": 5,
          "index": 6609
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a path mapping, where any reference to a file in <code>fromFile</code> is remapped to be\n loaded via the `toUri.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "fromFile {String} the directory (or filename) to map",
            "paramName": "fromFile",
            "description": " the directory (or filename) to map",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "toUri {String} the URI to map to",
            "paramName": "toUri",
            "description": " the URI to map to",
            "type": "String"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getPathMapping": {
      "location": {
        "start": {
          "line": 279,
          "column": 4,
          "index": 6894
        },
        "end": {
          "line": 294,
          "column": 5,
          "index": 7335
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a filename to a URI, taking into account mappings added via <code>addMapping</code>.  If there is\n no mapping, null is returned</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "filename {String} the filename to map",
            "paramName": "filename",
            "description": " the filename to map",
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the URI for the file, null if not found",
            "type": "String",
            "description": " the URI for the file, null if not found"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "mapToUri": {
      "location": {
        "start": {
          "line": 305,
          "column": 4,
          "index": 7816
        },
        "end": {
          "line": 316,
          "column": 5,
          "index": 8074
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts a filename to a URI, taking into account mappings added via <code>addMapping</code>.  If there is\n no mapping, the filename can be modified to be relative to a given path (ie the directory where\n the index.html is located)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "filename {String} the filename to map",
            "paramName": "filename",
            "description": " the filename to map",
            "type": "String"
          },
          {
            "name": "@param",
            "body": "relativeTo {String?} optional path that the filename needs to be relative to if there is no mapping",
            "paramName": "relativeTo",
            "description": " optional path that the filename needs to be relative to if there is no mapping",
            "optional": true,
            "type": "String"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String} the URI for the file",
            "type": "String",
            "description": " the URI for the file"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_copyClassesToFile": {
      "location": {
        "start": {
          "line": 318,
          "column": 4,
          "index": 8081
        },
        "end": {
          "line": 326,
          "column": 5,
          "index": 8498
        }
      },
      "type": "function",
      "access": "protected"
    },
    "generateApplication": {
      "location": {
        "start": {
          "line": 334,
          "column": 4,
          "index": 8668
        },
        "end": {
          "line": 586,
          "column": 5,
          "index": 17343
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Generates the application</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "application {Application} the application",
            "paramName": "application",
            "description": " the application",
            "type": "Application"
          },
          {
            "name": "@param",
            "body": "environment {Object} the environment",
            "paramName": "environment",
            "description": " the environment",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "_writeTranslations": {
      "location": {
        "start": {
          "line": 591,
          "column": 4,
          "index": 17420
        },
        "end": {
          "line": 619,
          "column": 5,
          "index": 18239
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Handles the output of translations and locales</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_transformLocales": {
      "location": {
        "start": {
          "line": 628,
          "column": 4,
          "index": 18540
        },
        "end": {
          "line": 641,
          "column": 5,
          "index": 18913
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Transform method for locales property; ensures that all locales are case correct, ie\n have the form aa<em>BB (for example \"en</em>GB\" is correct but \"en_gb\" is invalid)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "value {String[]} array of locale IDs",
            "paramName": "value",
            "description": " array of locale IDs",
            "type": "String[]"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]} the modified array",
            "type": "String[]",
            "description": " the modified array"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_writeLocales": {
      "location": {
        "start": {
          "line": 651,
          "column": 4,
          "index": 19528
        },
        "end": {
          "line": 693,
          "column": 5,
          "index": 20845
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Writes the required locale CLDR data, incorporating inheritance.  Note that locales in CLDR can\n have a \"parent locale\", where the locale inherits all settings from the parent except where explicitly\n set in the locale.  This is in addition to the inheritance between language and locale, eg where \"en<em>GB\"\n overrides settings from \"en\".  Qooxdoo client understands that if a setting is not provided in\n \"en</em>GB\" it must look to \"en\", but it does not understand the \"parent locale\" inheritance, so this\n method must flatten the \"parent locale\" inheritance.</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_writeAllTranslations": {
      "location": {
        "start": {
          "line": 698,
          "column": 4,
          "index": 20899
        },
        "end": {
          "line": 731,
          "column": 5,
          "index": 22170
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Writes all translations</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_writeRequiredTranslations": {
      "location": {
        "start": {
          "line": 736,
          "column": 4,
          "index": 22259
        },
        "end": {
          "line": 796,
          "column": 5,
          "index": 24437
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Writes only those translations which are actually required</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_writeApplication": {
      "location": {
        "start": {
          "line": 801,
          "column": 4,
          "index": 24490
        },
        "end": {
          "line": 867,
          "column": 5,
          "index": 26515
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Writes the application</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "_writeIndexHtml": {
      "location": {
        "start": {
          "line": 872,
          "column": 4,
          "index": 26575
        },
        "end": {
          "line": 1013,
          "column": 5,
          "index": 31389
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Called to generate index.html</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected"
    },
    "getAppMeta": {
      "location": {
        "start": {
          "line": 1015,
          "column": 4,
          "index": 31396
        },
        "end": {
          "line": 1017,
          "column": 5,
          "index": 31445
        }
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getType": {
      "type": "function",
      "name": "getType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>type</code>.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for type"
          }
        ]
      }
    },
    "setType": {
      "type": "function",
      "name": "setType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>type</code>.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for type"
          }
        ]
      }
    },
    "resetType": {
      "type": "function",
      "name": "resetType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>type</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ]
      }
    },
    "getOutputDir": {
      "type": "function",
      "name": "getOutputDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>outputDir</code>.\n\nFor further details take a look at the property definition: {@link #outputDir}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for outputDir"
          }
        ]
      }
    },
    "setOutputDir": {
      "type": "function",
      "name": "setOutputDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>outputDir</code>.\n\nFor further details take a look at the property definition: {@link #outputDir}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for outputDir"
          }
        ]
      }
    },
    "resetOutputDir": {
      "type": "function",
      "name": "resetOutputDir",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>outputDir</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #outputDir}."
          }
        ]
      }
    },
    "getGenerateIndexHtml": {
      "type": "function",
      "name": "getGenerateIndexHtml",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>generateIndexHtml</code>.\n\nFor further details take a look at the property definition: {@link #generateIndexHtml}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for generateIndexHtml"
          }
        ]
      }
    },
    "isGenerateIndexHtml": {
      "type": "function",
      "name": "isGenerateIndexHtml",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>generateIndexHtml</code>.\n\nFor further details take a look at the property definition: {@link #generateIndexHtml}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for generateIndexHtml"
          }
        ]
      }
    },
    "setGenerateIndexHtml": {
      "type": "function",
      "name": "setGenerateIndexHtml",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>generateIndexHtml</code>.\n\nFor further details take a look at the property definition: {@link #generateIndexHtml}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for generateIndexHtml"
          }
        ]
      }
    },
    "resetGenerateIndexHtml": {
      "type": "function",
      "name": "resetGenerateIndexHtml",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>generateIndexHtml</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #generateIndexHtml}."
          }
        ]
      }
    },
    "getEnvironment": {
      "type": "function",
      "name": "getEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>environment</code>.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for environment"
          }
        ]
      }
    },
    "setEnvironment": {
      "type": "function",
      "name": "setEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>environment</code>.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for environment"
          }
        ]
      }
    },
    "resetEnvironment": {
      "type": "function",
      "name": "resetEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>environment</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ]
      }
    },
    "getDefaultEnvironment": {
      "type": "function",
      "name": "getDefaultEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>defaultEnvironment</code>.\n\nFor further details take a look at the property definition: {@link #defaultEnvironment}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for defaultEnvironment"
          }
        ]
      }
    },
    "setDefaultEnvironment": {
      "type": "function",
      "name": "setDefaultEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>defaultEnvironment</code>.\n\nFor further details take a look at the property definition: {@link #defaultEnvironment}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for defaultEnvironment"
          }
        ]
      }
    },
    "resetDefaultEnvironment": {
      "type": "function",
      "name": "resetDefaultEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>defaultEnvironment</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #defaultEnvironment}."
          }
        ]
      }
    },
    "getPreserveEnvironment": {
      "type": "function",
      "name": "getPreserveEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>preserveEnvironment</code>.\n\nFor further details take a look at the property definition: {@link #preserveEnvironment}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for preserveEnvironment"
          }
        ]
      }
    },
    "setPreserveEnvironment": {
      "type": "function",
      "name": "setPreserveEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>preserveEnvironment</code>.\n\nFor further details take a look at the property definition: {@link #preserveEnvironment}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for preserveEnvironment"
          }
        ]
      }
    },
    "resetPreserveEnvironment": {
      "type": "function",
      "name": "resetPreserveEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>preserveEnvironment</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #preserveEnvironment}."
          }
        ]
      }
    },
    "getAnalyser": {
      "type": "function",
      "name": "getAnalyser",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>analyser</code>.\n\nFor further details take a look at the property definition: {@link #analyser}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for analyser"
          }
        ]
      }
    },
    "setAnalyser": {
      "type": "function",
      "name": "setAnalyser",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>analyser</code>.\n\nFor further details take a look at the property definition: {@link #analyser}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for analyser"
          }
        ]
      }
    },
    "resetAnalyser": {
      "type": "function",
      "name": "resetAnalyser",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>analyser</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #analyser}."
          }
        ]
      }
    },
    "getInlineExternalScripts": {
      "type": "function",
      "name": "getInlineExternalScripts",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>inlineExternalScripts</code>.\n\nFor further details take a look at the property definition: {@link #inlineExternalScripts}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for inlineExternalScripts"
          }
        ]
      }
    },
    "isInlineExternalScripts": {
      "type": "function",
      "name": "isInlineExternalScripts",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>inlineExternalScripts</code>.\n\nFor further details take a look at the property definition: {@link #inlineExternalScripts}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for inlineExternalScripts"
          }
        ]
      }
    },
    "setInlineExternalScripts": {
      "type": "function",
      "name": "setInlineExternalScripts",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>inlineExternalScripts</code>.\n\nFor further details take a look at the property definition: {@link #inlineExternalScripts}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for inlineExternalScripts"
          }
        ]
      }
    },
    "resetInlineExternalScripts": {
      "type": "function",
      "name": "resetInlineExternalScripts",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>inlineExternalScripts</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #inlineExternalScripts}."
          }
        ]
      }
    },
    "getAddTimestampsToUrls": {
      "type": "function",
      "name": "getAddTimestampsToUrls",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>addTimestampsToUrls</code>.\n\nFor further details take a look at the property definition: {@link #addTimestampsToUrls}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for addTimestampsToUrls"
          }
        ]
      }
    },
    "isAddTimestampsToUrls": {
      "type": "function",
      "name": "isAddTimestampsToUrls",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>addTimestampsToUrls</code>.\n\nFor further details take a look at the property definition: {@link #addTimestampsToUrls}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for addTimestampsToUrls"
          }
        ]
      }
    },
    "setAddTimestampsToUrls": {
      "type": "function",
      "name": "setAddTimestampsToUrls",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>addTimestampsToUrls</code>.\n\nFor further details take a look at the property definition: {@link #addTimestampsToUrls}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for addTimestampsToUrls"
          }
        ]
      }
    },
    "resetAddTimestampsToUrls": {
      "type": "function",
      "name": "resetAddTimestampsToUrls",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>addTimestampsToUrls</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #addTimestampsToUrls}."
          }
        ]
      }
    },
    "getLocales": {
      "type": "function",
      "name": "getLocales",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>locales</code>.\n\nFor further details take a look at the property definition: {@link #locales}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for locales"
          }
        ]
      }
    },
    "setLocales": {
      "type": "function",
      "name": "setLocales",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>locales</code>.\n\nFor further details take a look at the property definition: {@link #locales}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for locales"
          }
        ]
      }
    },
    "resetLocales": {
      "type": "function",
      "name": "resetLocales",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>locales</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #locales}."
          }
        ]
      }
    },
    "getI18nAsParts": {
      "type": "function",
      "name": "getI18nAsParts",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>i18nAsParts</code>.\n\nFor further details take a look at the property definition: {@link #i18nAsParts}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for i18nAsParts"
          }
        ]
      }
    },
    "isI18nAsParts": {
      "type": "function",
      "name": "isI18nAsParts",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>i18nAsParts</code>.\n\nFor further details take a look at the property definition: {@link #i18nAsParts}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for i18nAsParts"
          }
        ]
      }
    },
    "setI18nAsParts": {
      "type": "function",
      "name": "setI18nAsParts",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>i18nAsParts</code>.\n\nFor further details take a look at the property definition: {@link #i18nAsParts}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for i18nAsParts"
          }
        ]
      }
    },
    "resetI18nAsParts": {
      "type": "function",
      "name": "resetI18nAsParts",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>i18nAsParts</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #i18nAsParts}."
          }
        ]
      }
    },
    "getWriteAllTranslations": {
      "type": "function",
      "name": "getWriteAllTranslations",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writeAllTranslations</code>.\n\nFor further details take a look at the property definition: {@link #writeAllTranslations}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writeAllTranslations"
          }
        ]
      }
    },
    "isWriteAllTranslations": {
      "type": "function",
      "name": "isWriteAllTranslations",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writeAllTranslations</code>.\n\nFor further details take a look at the property definition: {@link #writeAllTranslations}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writeAllTranslations"
          }
        ]
      }
    },
    "setWriteAllTranslations": {
      "type": "function",
      "name": "setWriteAllTranslations",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>writeAllTranslations</code>.\n\nFor further details take a look at the property definition: {@link #writeAllTranslations}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for writeAllTranslations"
          }
        ]
      }
    },
    "resetWriteAllTranslations": {
      "type": "function",
      "name": "resetWriteAllTranslations",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>writeAllTranslations</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #writeAllTranslations}."
          }
        ]
      }
    },
    "getUpdatePoFiles": {
      "type": "function",
      "name": "getUpdatePoFiles",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>updatePoFiles</code>.\n\nFor further details take a look at the property definition: {@link #updatePoFiles}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for updatePoFiles"
          }
        ]
      }
    },
    "isUpdatePoFiles": {
      "type": "function",
      "name": "isUpdatePoFiles",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>updatePoFiles</code>.\n\nFor further details take a look at the property definition: {@link #updatePoFiles}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for updatePoFiles"
          }
        ]
      }
    },
    "setUpdatePoFiles": {
      "type": "function",
      "name": "setUpdatePoFiles",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>updatePoFiles</code>.\n\nFor further details take a look at the property definition: {@link #updatePoFiles}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for updatePoFiles"
          }
        ]
      }
    },
    "resetUpdatePoFiles": {
      "type": "function",
      "name": "resetUpdatePoFiles",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>updatePoFiles</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #updatePoFiles}."
          }
        ]
      }
    },
    "getLibraryPoPolicy": {
      "type": "function",
      "name": "getLibraryPoPolicy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>libraryPoPolicy</code>.\n\nFor further details take a look at the property definition: {@link #libraryPoPolicy}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for libraryPoPolicy"
          }
        ]
      }
    },
    "setLibraryPoPolicy": {
      "type": "function",
      "name": "setLibraryPoPolicy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>libraryPoPolicy</code>.\n\nFor further details take a look at the property definition: {@link #libraryPoPolicy}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for libraryPoPolicy"
          }
        ]
      }
    },
    "resetLibraryPoPolicy": {
      "type": "function",
      "name": "resetLibraryPoPolicy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>libraryPoPolicy</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #libraryPoPolicy}."
          }
        ]
      }
    },
    "getWriteCompileInfo": {
      "type": "function",
      "name": "getWriteCompileInfo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writeCompileInfo</code>.\n\nFor further details take a look at the property definition: {@link #writeCompileInfo}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writeCompileInfo"
          }
        ]
      }
    },
    "isWriteCompileInfo": {
      "type": "function",
      "name": "isWriteCompileInfo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writeCompileInfo</code>.\n\nFor further details take a look at the property definition: {@link #writeCompileInfo}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writeCompileInfo"
          }
        ]
      }
    },
    "setWriteCompileInfo": {
      "type": "function",
      "name": "setWriteCompileInfo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>writeCompileInfo</code>.\n\nFor further details take a look at the property definition: {@link #writeCompileInfo}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for writeCompileInfo"
          }
        ]
      }
    },
    "resetWriteCompileInfo": {
      "type": "function",
      "name": "resetWriteCompileInfo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>writeCompileInfo</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #writeCompileInfo}."
          }
        ]
      }
    },
    "getWriteLibraryInfo": {
      "type": "function",
      "name": "getWriteLibraryInfo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writeLibraryInfo</code>.\n\nFor further details take a look at the property definition: {@link #writeLibraryInfo}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writeLibraryInfo"
          }
        ]
      }
    },
    "isWriteLibraryInfo": {
      "type": "function",
      "name": "isWriteLibraryInfo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writeLibraryInfo</code>.\n\nFor further details take a look at the property definition: {@link #writeLibraryInfo}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writeLibraryInfo"
          }
        ]
      }
    },
    "setWriteLibraryInfo": {
      "type": "function",
      "name": "setWriteLibraryInfo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>writeLibraryInfo</code>.\n\nFor further details take a look at the property definition: {@link #writeLibraryInfo}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for writeLibraryInfo"
          }
        ]
      }
    },
    "resetWriteLibraryInfo": {
      "type": "function",
      "name": "resetWriteLibraryInfo",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>writeLibraryInfo</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #writeLibraryInfo}."
          }
        ]
      }
    },
    "getSourceMapRelativePaths": {
      "type": "function",
      "name": "getSourceMapRelativePaths",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sourceMapRelativePaths</code>.\n\nFor further details take a look at the property definition: {@link #sourceMapRelativePaths}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for sourceMapRelativePaths"
          }
        ]
      }
    },
    "isSourceMapRelativePaths": {
      "type": "function",
      "name": "isSourceMapRelativePaths",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>sourceMapRelativePaths</code>.\n\nFor further details take a look at the property definition: {@link #sourceMapRelativePaths}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for sourceMapRelativePaths"
          }
        ]
      }
    },
    "setSourceMapRelativePaths": {
      "type": "function",
      "name": "setSourceMapRelativePaths",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>sourceMapRelativePaths</code>.\n\nFor further details take a look at the property definition: {@link #sourceMapRelativePaths}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for sourceMapRelativePaths"
          }
        ]
      }
    },
    "resetSourceMapRelativePaths": {
      "type": "function",
      "name": "resetSourceMapRelativePaths",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>sourceMapRelativePaths</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #sourceMapRelativePaths}."
          }
        ]
      }
    }
  },
  "descendants": [
    "qx.tool.compiler.targets.BuildTarget",
    "qx.tool.compiler.targets.SourceTarget"
  ]
}