{
  "className": "qx.tool.utils.json.Stringify",
  "packageName": "qx.tool.utils.json",
  "name": "Stringify",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 28,
        "column": 0
      },
      "end": {
        "line": 474,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Stringify</p>"
        }
      ]
    }
  },
  "type": "class",
  "statics": {
    "prettyPrint": {
      "location": {
        "start": {
          "line": 35,
          "column": 4
        },
        "end": {
          "line": 100,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Pretty prints an AST tree</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "reprint": {
      "location": {
        "start": {
          "line": 118,
          "column": 4
        },
        "end": {
          "line": 381,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Prints an object out, using the AST to preserve formatting and whitespace\n (and include comments) wherever possible.  Any parts of the object which\n do not have a corresponding AST tree will be pretty printed\n This is only really suitable for amendments to the object graph because\n preserving formatting &amp; comments relies on a 1:1 comparison between the\n AST and the object.  This means that if you move a subset of an object to\n another part of the object graph, it will be seen as a deletion of one\n subset and a brand new subset - you will loose all comments as well as\n layout.</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "object {Object}"
          },
          {
            "name": "@param",
            "body": "ast {Tokenizer}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "astToObject": {
      "location": {
        "start": {
          "line": 386,
          "column": 4
        },
        "end": {
          "line": 417,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Converts an AST into an ordinary POJO</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isPlainObject": {
      "location": {
        "start": {
          "line": 425,
          "column": 4
        },
        "end": {
          "line": 432,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether the value is a native object</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isLiteral": {
      "location": {
        "start": {
          "line": 440,
          "column": 4
        },
        "end": {
          "line": 450,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects whether the value is a literal value</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "obj {Object}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "isSameLiteral": {
      "location": {
        "start": {
          "line": 455,
          "column": 4
        },
        "end": {
          "line": 472,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Compares a node to see if it is the same as a literal value</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "members": {
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": []
}