{
  "className": "qx.tool.utils.json.Writer",
  "packageName": "qx.tool.utils.json",
  "name": "Writer",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 26,
        "column": 0
      },
      "end": {
        "line": 145,
        "column": 3
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Writer for serialising JSON, automatically indenting as required</p>"
        }
      ]
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 29,
        "column": 2
      },
      "end": {
        "line": 35,
        "column": 3
      }
    }
  },
  "members": {
    "write": {
      "location": {
        "start": {
          "line": 42,
          "column": 4
        },
        "end": {
          "line": 71,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Writes a string/number.  Multiple lines are rewritten with indentation at the\n start of each line</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "comments": {
      "location": {
        "start": {
          "line": 76,
          "column": 4
        },
        "end": {
          "line": 83,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Outputs comments</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "indent": {
      "location": {
        "start": {
          "line": 90,
          "column": 4
        },
        "end": {
          "line": 113,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Increases or decreases the indentation level (one indent is two spaces)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "count {Number} number to increase/decrease by",
            "paramName": "count",
            "description": " number to increase/decrease by",
            "type": "Number"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "matchIndent": {
      "location": {
        "start": {
          "line": 127,
          "column": 4
        },
        "end": {
          "line": 134,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Detects the current indentation level in the output, which has been added manually,\n ie outside of the <code>indent()</code> method.  When outputting an AST via <code>reprint()</code>, whitespace\n is copied too, this allows the code to adopt whatever indentation level has been\n output by the AST so that injecting <code>prettyPrint()</code>-ed new objects are at the same\\\n level.\n The old indent is returned, and should be passed to <code>resetIndent()</code> to restore the\n previous value.</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object} previous indentation",
            "type": "Object",
            "description": " previous indentation"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "resetIndent": {
      "location": {
        "start": {
          "line": 141,
          "column": 4
        },
        "end": {
          "line": 143,
          "column": 5
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Restores the previous indentation settings prior to <code>matchIndent()</code></p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "indent {Object} previous indentation settings",
            "paramName": "indent",
            "description": " previous indentation settings",
            "type": "Object"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    }
  },
  "descendants": []
}