{
  "className": "qx.tool.compiler.app.Application",
  "packageName": "qx.tool.compiler.app",
  "name": "Application",
  "superClass": "qx.core.Object",
  "interfaces": [],
  "mixins": [],
  "functionName": null,
  "clazz": {
    "location": {
      "start": {
        "line": 25,
        "column": 0,
        "index": 739
      },
      "end": {
        "line": 1028,
        "column": 3,
        "index": 28055
      }
    }
  },
  "type": "class",
  "construct": {
    "location": {
      "start": {
        "line": 32,
        "column": 2,
        "index": 908
      },
      "end": {
        "line": 46,
        "column": 3,
        "index": 1293
      }
    },
    "jsdoc": {
      "@description": [
        {
          "name": "@description",
          "body": "<p>Constructor</p>"
        }
      ],
      "@param": [
        {
          "name": "@param",
          "body": "classname {String|String[]} [, classname...]",
          "paramName": "classname",
          "description": " [, classname...]",
          "type": [
            "String",
            {
              "type": "String",
              "dimensions": 2
            }
          ]
        }
      ]
    }
  },
  "properties": {
    "type": {
      "location": {
        "start": {
          "line": 53,
          "column": 4,
          "index": 1463
        },
        "end": {
          "line": 57,
          "column": 5,
          "index": 1568
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The type of application to generate; note that changing this will change the <code>loaderTemplate</code>\n and <code>theme</code> properties</p>"
          }
        ]
      },
      "name": "type",
      "propertyType": "new",
      "apply": "_applyType",
      "init": "browser",
      "possibleValues": [
        "browser",
        "rhino",
        "node"
      ],
      "defaultValue": "browser"
    },
    "environment": {
      "location": {
        "start": {
          "line": 62,
          "column": 4,
          "index": 1623
        },
        "end": {
          "line": 65,
          "column": 5,
          "index": 1682
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Environment property map</p>"
          }
        ]
      },
      "name": "environment",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true
    },
    "analyser": {
      "location": {
        "start": {
          "line": 70,
          "column": 4,
          "index": 1734
        },
        "end": {
          "line": 73,
          "column": 5,
          "index": 1790
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The Analyser instance</p>"
          }
        ]
      },
      "name": "analyser",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true
    },
    "theme": {
      "location": {
        "start": {
          "line": 78,
          "column": 4,
          "index": 1851
        },
        "end": {
          "line": 81,
          "column": 5,
          "index": 1918
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Application theme (class name)</p>"
          }
        ]
      },
      "name": "theme",
      "propertyType": "new",
      "init": "qx.theme.Simple",
      "check": "String",
      "defaultValue": "qx.theme.Simple"
    },
    "name": {
      "location": {
        "start": {
          "line": 86,
          "column": 4,
          "index": 2033
        },
        "end": {
          "line": 90,
          "column": 5,
          "index": 2112
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The name of the application, used for script directory file unless outputPath is set</p>"
          }
        ]
      },
      "name": "name",
      "propertyType": "new",
      "nullable": false,
      "init": "index",
      "allowNull": false,
      "check": "String",
      "defaultValue": "index"
    },
    "title": {
      "location": {
        "start": {
          "line": 96,
          "column": 4,
          "index": 2268
        },
        "end": {
          "line": 100,
          "column": 5,
          "index": 2344
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The human readable, customer facing title of the application - it's used to customise the title\n of the index.html page</p>"
          }
        ]
      },
      "name": "title",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "description": {
      "location": {
        "start": {
          "line": 106,
          "column": 4,
          "index": 2495
        },
        "end": {
          "line": 110,
          "column": 5,
          "index": 2577
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The human readable, customer facing description of the application - it's used to list applications\n in <code>qx serve</code></p>"
          }
        ]
      },
      "name": "description",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "outputPath": {
      "location": {
        "start": {
          "line": 115,
          "column": 4,
          "index": 2657
        },
        "end": {
          "line": 119,
          "column": 5,
          "index": 2738
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Output path, relative to the target's output path</p>"
          }
        ]
      },
      "name": "outputPath",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "bootPath": {
      "location": {
        "start": {
          "line": 124,
          "column": 4,
          "index": 2816
        },
        "end": {
          "line": 128,
          "column": 5,
          "index": 2895
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Boot path, relative to the target's output path</p>"
          }
        ]
      },
      "name": "bootPath",
      "propertyType": "new",
      "nullable": true,
      "allowNull": true,
      "check": "String"
    },
    "templatePath": {
      "location": {
        "start": {
          "line": 133,
          "column": 4,
          "index": 2939
        },
        "end": {
          "line": 138,
          "column": 5,
          "index": 3048
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>template path</p>"
          }
        ]
      },
      "name": "templatePath",
      "propertyType": "new",
      "apply": "_applyType",
      "nullable": false,
      "init": "",
      "allowNull": false,
      "check": "String",
      "defaultValue": ""
    },
    "publish": {
      "location": {
        "start": {
          "line": 144,
          "column": 4,
          "index": 3168
        },
        "end": {
          "line": 147,
          "column": 5,
          "index": 3225
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether this app is to be published (e.g. in the PackageBrowser).\n Default is true.</p>"
          }
        ]
      },
      "name": "publish",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "deploy": {
      "location": {
        "start": {
          "line": 153,
          "column": 4,
          "index": 3314
        },
        "end": {
          "line": 156,
          "column": 5,
          "index": 3370
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether this app is to be deployed\n Default is true.</p>"
          }
        ]
      },
      "name": "deploy",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "standalone": {
      "location": {
        "start": {
          "line": 162,
          "column": 4,
          "index": 3501
        },
        "end": {
          "line": 165,
          "column": 5,
          "index": 3561
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Whether this app can run on its own (true, default) or is part of another\n application (false)</p>"
          }
        ]
      },
      "name": "standalone",
      "propertyType": "new",
      "init": true,
      "check": "Boolean",
      "defaultValue": true
    },
    "include": {
      "location": {
        "start": {
          "line": 170,
          "column": 4,
          "index": 3625
        },
        "end": {
          "line": 174,
          "column": 5,
          "index": 3722
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Classes to include with the build</p>"
          }
        ]
      },
      "name": "include",
      "propertyType": "new",
      "nullable": false,
      "transform": "__P_389_1",
      "allowNull": false,
      "check": "Array"
    },
    "exclude": {
      "location": {
        "start": {
          "line": 179,
          "column": 4,
          "index": 3785
        },
        "end": {
          "line": 183,
          "column": 5,
          "index": 3882
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Classes to exclude when building</p>"
          }
        ]
      },
      "name": "exclude",
      "propertyType": "new",
      "nullable": false,
      "transform": "__P_389_1",
      "allowNull": false,
      "check": "Array"
    },
    "bundleInclude": {
      "location": {
        "start": {
          "line": 188,
          "column": 4,
          "index": 3966
        },
        "end": {
          "line": 193,
          "column": 5,
          "index": 4086
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Classes to bundle together for delivery to the client</p>"
          }
        ]
      },
      "name": "bundleInclude",
      "propertyType": "new",
      "nullable": true,
      "transform": "__P_389_1",
      "allowNull": true,
      "check": "Array"
    },
    "bundleExclude": {
      "location": {
        "start": {
          "line": 198,
          "column": 4,
          "index": 4181
        },
        "end": {
          "line": 203,
          "column": 5,
          "index": 4301
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Classes to exclude from bundling together for delivery to client</p>"
          }
        ]
      },
      "name": "bundleExclude",
      "propertyType": "new",
      "nullable": true,
      "transform": "__P_389_1",
      "allowNull": true,
      "check": "Array"
    },
    "loaderTemplate": {
      "location": {
        "start": {
          "line": 209,
          "column": 4,
          "index": 4439
        },
        "end": {
          "line": 212,
          "column": 5,
          "index": 4507
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Template file used to create index.js; note that this is changed when the <code>type</code> property\n is changed</p>"
          }
        ]
      },
      "name": "loaderTemplate",
      "propertyType": "new",
      "nullable": false,
      "allowNull": false,
      "check": "String"
    },
    "writeIndexHtmlToRoot": {
      "location": {
        "start": {
          "line": 217,
          "column": 4,
          "index": 4588
        },
        "end": {
          "line": 220,
          "column": 5,
          "index": 4659
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Writes the index.html into root instead of app dir</p>"
          }
        ]
      },
      "name": "writeIndexHtmlToRoot",
      "propertyType": "new",
      "init": false,
      "check": "Boolean",
      "defaultValue": false
    },
    "localModules": {
      "location": {
        "start": {
          "line": 231,
          "column": 4,
          "index": 5189
        },
        "end": {
          "line": 234,
          "column": 5,
          "index": 5250
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Map specifying local modules to include in the build. Local modules are\n always included in the compiled output, regardless of application type\n (node, browser, etc.). Each member of the map has a key that is the\n name of the module to be <code>require</code>d in code. The value is the path to\n the module to be included. The path must begin with \"./\", and is\n relative to the directory containing compile.json. The module may be\n either a CommonJS module or an ES6 module.</p>"
          }
        ]
      },
      "name": "localModules",
      "propertyType": "new",
      "check": "Object"
    },
    "qxOwner": {
      "type": "property",
      "name": "qxOwner",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>The owning object</p>"
          }
        ]
      }
    },
    "qxObjectId": {
      "type": "property",
      "name": "qxObjectId",
      "abstract": false,
      "mixin": true,
      "access": "public",
      "overriddenFrom": "qx.core.MObjectId",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>{String} The ID of the object.</p>"
          }
        ]
      }
    }
  },
  "members": {
    "__loadDeps": {
      "location": {
        "start": {
          "line": 238,
          "column": 4,
          "index": 5274
        },
        "end": {
          "line": 238,
          "column": 20,
          "index": 5290
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__parts": {
      "location": {
        "start": {
          "line": 239,
          "column": 4,
          "index": 5296
        },
        "end": {
          "line": 239,
          "column": 17,
          "index": 5309
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__requiredLibs": {
      "location": {
        "start": {
          "line": 240,
          "column": 4,
          "index": 5315
        },
        "end": {
          "line": 240,
          "column": 24,
          "index": 5335
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__fatalCompileErrors": {
      "location": {
        "start": {
          "line": 241,
          "column": 4,
          "index": 5341
        },
        "end": {
          "line": 241,
          "column": 30,
          "index": 5367
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__classes": {
      "location": {
        "start": {
          "line": 242,
          "column": 4,
          "index": 5373
        },
        "end": {
          "line": 242,
          "column": 19,
          "index": 5388
        }
      },
      "type": "variable",
      "access": "private"
    },
    "__partsDeps": {
      "location": {
        "start": {
          "line": 243,
          "column": 4,
          "index": 5394
        },
        "end": {
          "line": 243,
          "column": 21,
          "index": 5411
        }
      },
      "type": "variable",
      "access": "private"
    },
    "isBrowserApp": {
      "location": {
        "start": {
          "line": 250,
          "column": 4,
          "index": 5513
        },
        "end": {
          "line": 252,
          "column": 5,
          "index": 5578
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Checks if the application is for browser</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "boolean"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "calcDependencies": {
      "location": {
        "start": {
          "line": 257,
          "column": 4,
          "index": 5674
        },
        "end": {
          "line": 628,
          "column": 5,
          "index": 16706
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Calculates the dependencies of the classes to create a load order</p>"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getFatalCompileErrors": {
      "location": {
        "start": {
          "line": 635,
          "column": 4,
          "index": 16859
        },
        "end": {
          "line": 637,
          "column": 5,
          "index": 16930
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets a list of class names that this Application requires which have fatal compile errors</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]}",
            "type": "String[]",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getUris": {
      "location": {
        "start": {
          "line": 644,
          "column": 4,
          "index": 17059
        },
        "end": {
          "line": 657,
          "column": 5,
          "index": 17388
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets a list of URIs for classes that are required, in load order</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]}",
            "type": "String[]",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getDependencies": {
      "location": {
        "start": {
          "line": 664,
          "column": 4,
          "index": 17511
        },
        "end": {
          "line": 666,
          "column": 5,
          "index": 17566
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets a list of classnames that are required, in load order</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]}",
            "type": "String[]",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getPartsDependencies": {
      "location": {
        "start": {
          "line": 673,
          "column": 4,
          "index": 17669
        },
        "end": {
          "line": 675,
          "column": 5,
          "index": 17730
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Gets the parts dependencies structures</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Object[]}",
            "type": "Object[]",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRequiredLibraries": {
      "location": {
        "start": {
          "line": 682,
          "column": 4,
          "index": 17864
        },
        "end": {
          "line": 684,
          "column": 5,
          "index": 17928
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a list of library names which are required by the application</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]}",
            "type": "String[]",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getAssetUris": {
      "location": {
        "start": {
          "line": 692,
          "column": 4,
          "index": 18195
        },
        "end": {
          "line": 834,
          "column": 5,
          "index": 22509
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a list of all of the assets required by all classes</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "target {Target} the current target",
            "paramName": "target",
            "description": " the current target",
            "type": "Target"
          },
          {
            "name": "@param",
            "body": "resManager  {qx.tool.compiler.resources.Manager} the resource manager",
            "paramName": "resManager",
            "description": " the resource manager",
            "type": "qx.tool.compiler.resources.Manager"
          },
          {
            "name": "@param",
            "body": "environment {Map} environment",
            "paramName": "environment",
            "description": " environment",
            "type": "Map"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getClassName": {
      "location": {
        "start": {
          "line": 840,
          "column": 4,
          "index": 22607
        },
        "end": {
          "line": 842,
          "column": 5,
          "index": 22661
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the class name for the application</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String}",
            "type": "String",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getRequiredClasses": {
      "location": {
        "start": {
          "line": 848,
          "column": 4,
          "index": 22767
        },
        "end": {
          "line": 863,
          "column": 5,
          "index": 23447
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the classes required for the application</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{String[]}",
            "type": "String[]",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "addPart": {
      "location": {
        "start": {
          "line": 869,
          "column": 4,
          "index": 23531
        },
        "end": {
          "line": 874,
          "column": 5,
          "index": 23645
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Adds a part</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "part {Part} the part to add",
            "paramName": "part",
            "description": " the part to add",
            "type": "qx.tool.compiler.app.Part"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getParts": {
      "location": {
        "start": {
          "line": 880,
          "column": 4,
          "index": 23752
        },
        "end": {
          "line": 882,
          "column": 5,
          "index": 23803
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns the parts, or null if there are none defined</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Part[]}",
            "type": "Part[]",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "getCalculatedEnvironment": {
      "location": {
        "start": {
          "line": 890,
          "column": 4,
          "index": 24034
        },
        "end": {
          "line": 900,
          "column": 5,
          "index": 24337
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Returns a dynamically calculated version of the application environment, which\n is defaults or dynamic values plus the <code>environment</code> property</p>"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Map} The environment settings",
            "type": "Map",
            "description": " The environment settings"
          }
        ]
      },
      "type": "function",
      "access": "public"
    },
    "__expandClassnames": {
      "location": {
        "start": {
          "line": 908,
          "column": 4,
          "index": 24536
        },
        "end": {
          "line": 945,
          "column": 5,
          "index": 25734
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Expands a list of class names including wildcards (eg \"qx.ui.*\") into an\n exhaustive list without wildcards</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "names {String[]}"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "String[]"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "_applyType": {
      "location": {
        "start": {
          "line": 950,
          "column": 4,
          "index": 25790
        },
        "end": {
          "line": 958,
          "column": 5,
          "index": 26001
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Apply for <code>type</code> property</p>"
          }
        ]
      },
      "type": "function",
      "access": "protected",
      "applyFor": [
        "type",
        "templatePath"
      ]
    },
    "__transformArray": {
      "location": {
        "start": {
          "line": 963,
          "column": 4,
          "index": 26102
        },
        "end": {
          "line": 971,
          "column": 5,
          "index": 26276
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Transforms values to make sure that they are an array (and never null)</p>"
          }
        ]
      },
      "type": "function",
      "access": "private"
    },
    "getQxOwner": {
      "type": "function",
      "name": "getQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "qx.core.Object",
            "desc": "Returns the value for qxOwner"
          }
        ]
      }
    },
    "setQxOwner": {
      "type": "function",
      "name": "setQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxOwner</code>.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "qx.core.Object",
            "paramName": "value",
            "desc": "Value for qxOwner"
          }
        ]
      }
    },
    "resetQxOwner": {
      "type": "function",
      "name": "resetQxOwner",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxOwner</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxOwner}."
          }
        ]
      }
    },
    "getQxObjectId": {
      "type": "function",
      "name": "getQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "[[ ObjectMethod Function ]]",
            "desc": "Returns the value for qxObjectId"
          }
        ]
      }
    },
    "setQxObjectId": {
      "type": "function",
      "name": "setQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>qxObjectId</code>.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "[[ ObjectMethod Function ]]",
            "paramName": "value",
            "desc": "Value for qxObjectId"
          }
        ]
      }
    },
    "resetQxObjectId": {
      "type": "function",
      "name": "resetQxObjectId",
      "abstract": false,
      "mixin": false,
      "inherited": true,
      "access": "public",
      "overriddenFrom": "qx.core.Object",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>qxObjectId</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #qxObjectId}."
          }
        ]
      }
    },
    "getType": {
      "type": "function",
      "name": "getType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>type</code>.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for type"
          }
        ]
      }
    },
    "setType": {
      "type": "function",
      "name": "setType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>type</code>.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for type"
          }
        ]
      }
    },
    "resetType": {
      "type": "function",
      "name": "resetType",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>type</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #type}."
          }
        ]
      }
    },
    "getEnvironment": {
      "type": "function",
      "name": "getEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>environment</code>.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for environment"
          }
        ]
      }
    },
    "setEnvironment": {
      "type": "function",
      "name": "setEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>environment</code>.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for environment"
          }
        ]
      }
    },
    "resetEnvironment": {
      "type": "function",
      "name": "resetEnvironment",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>environment</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #environment}."
          }
        ]
      }
    },
    "getAnalyser": {
      "type": "function",
      "name": "getAnalyser",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>analyser</code>.\n\nFor further details take a look at the property definition: {@link #analyser}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "any",
            "desc": "Returns the value for analyser"
          }
        ]
      }
    },
    "setAnalyser": {
      "type": "function",
      "name": "setAnalyser",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>analyser</code>.\n\nFor further details take a look at the property definition: {@link #analyser}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "any",
            "paramName": "value",
            "desc": "Value for analyser"
          }
        ]
      }
    },
    "resetAnalyser": {
      "type": "function",
      "name": "resetAnalyser",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>analyser</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #analyser}."
          }
        ]
      }
    },
    "getTheme": {
      "type": "function",
      "name": "getTheme",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>theme</code>.\n\nFor further details take a look at the property definition: {@link #theme}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for theme"
          }
        ]
      }
    },
    "setTheme": {
      "type": "function",
      "name": "setTheme",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>theme</code>.\n\nFor further details take a look at the property definition: {@link #theme}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for theme"
          }
        ]
      }
    },
    "resetTheme": {
      "type": "function",
      "name": "resetTheme",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>theme</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #theme}."
          }
        ]
      }
    },
    "getName": {
      "type": "function",
      "name": "getName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for name"
          }
        ]
      }
    },
    "setName": {
      "type": "function",
      "name": "setName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>name</code>.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for name"
          }
        ]
      }
    },
    "resetName": {
      "type": "function",
      "name": "resetName",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>name</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #name}."
          }
        ]
      }
    },
    "getTitle": {
      "type": "function",
      "name": "getTitle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>title</code>.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for title"
          }
        ]
      }
    },
    "setTitle": {
      "type": "function",
      "name": "setTitle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>title</code>.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for title"
          }
        ]
      }
    },
    "resetTitle": {
      "type": "function",
      "name": "resetTitle",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>title</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #title}."
          }
        ]
      }
    },
    "getDescription": {
      "type": "function",
      "name": "getDescription",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>description</code>.\n\nFor further details take a look at the property definition: {@link #description}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for description"
          }
        ]
      }
    },
    "setDescription": {
      "type": "function",
      "name": "setDescription",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>description</code>.\n\nFor further details take a look at the property definition: {@link #description}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for description"
          }
        ]
      }
    },
    "resetDescription": {
      "type": "function",
      "name": "resetDescription",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>description</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #description}."
          }
        ]
      }
    },
    "getOutputPath": {
      "type": "function",
      "name": "getOutputPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>outputPath</code>.\n\nFor further details take a look at the property definition: {@link #outputPath}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for outputPath"
          }
        ]
      }
    },
    "setOutputPath": {
      "type": "function",
      "name": "setOutputPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>outputPath</code>.\n\nFor further details take a look at the property definition: {@link #outputPath}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for outputPath"
          }
        ]
      }
    },
    "resetOutputPath": {
      "type": "function",
      "name": "resetOutputPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>outputPath</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #outputPath}."
          }
        ]
      }
    },
    "getBootPath": {
      "type": "function",
      "name": "getBootPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>bootPath</code>.\n\nFor further details take a look at the property definition: {@link #bootPath}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for bootPath"
          }
        ]
      }
    },
    "setBootPath": {
      "type": "function",
      "name": "setBootPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>bootPath</code>.\n\nFor further details take a look at the property definition: {@link #bootPath}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for bootPath"
          }
        ]
      }
    },
    "resetBootPath": {
      "type": "function",
      "name": "resetBootPath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>bootPath</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #bootPath}."
          }
        ]
      }
    },
    "getTemplatePath": {
      "type": "function",
      "name": "getTemplatePath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>templatePath</code>.\n\nFor further details take a look at the property definition: {@link #templatePath}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for templatePath"
          }
        ]
      }
    },
    "setTemplatePath": {
      "type": "function",
      "name": "setTemplatePath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>templatePath</code>.\n\nFor further details take a look at the property definition: {@link #templatePath}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for templatePath"
          }
        ]
      }
    },
    "resetTemplatePath": {
      "type": "function",
      "name": "resetTemplatePath",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>templatePath</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #templatePath}."
          }
        ]
      }
    },
    "getPublish": {
      "type": "function",
      "name": "getPublish",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>publish</code>.\n\nFor further details take a look at the property definition: {@link #publish}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for publish"
          }
        ]
      }
    },
    "isPublish": {
      "type": "function",
      "name": "isPublish",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>publish</code>.\n\nFor further details take a look at the property definition: {@link #publish}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for publish"
          }
        ]
      }
    },
    "setPublish": {
      "type": "function",
      "name": "setPublish",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>publish</code>.\n\nFor further details take a look at the property definition: {@link #publish}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for publish"
          }
        ]
      }
    },
    "resetPublish": {
      "type": "function",
      "name": "resetPublish",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>publish</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #publish}."
          }
        ]
      }
    },
    "getDeploy": {
      "type": "function",
      "name": "getDeploy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>deploy</code>.\n\nFor further details take a look at the property definition: {@link #deploy}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for deploy"
          }
        ]
      }
    },
    "isDeploy": {
      "type": "function",
      "name": "isDeploy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>deploy</code>.\n\nFor further details take a look at the property definition: {@link #deploy}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for deploy"
          }
        ]
      }
    },
    "setDeploy": {
      "type": "function",
      "name": "setDeploy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>deploy</code>.\n\nFor further details take a look at the property definition: {@link #deploy}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for deploy"
          }
        ]
      }
    },
    "resetDeploy": {
      "type": "function",
      "name": "resetDeploy",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>deploy</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #deploy}."
          }
        ]
      }
    },
    "getStandalone": {
      "type": "function",
      "name": "getStandalone",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>standalone</code>.\n\nFor further details take a look at the property definition: {@link #standalone}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for standalone"
          }
        ]
      }
    },
    "isStandalone": {
      "type": "function",
      "name": "isStandalone",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>standalone</code>.\n\nFor further details take a look at the property definition: {@link #standalone}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for standalone"
          }
        ]
      }
    },
    "setStandalone": {
      "type": "function",
      "name": "setStandalone",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>standalone</code>.\n\nFor further details take a look at the property definition: {@link #standalone}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for standalone"
          }
        ]
      }
    },
    "resetStandalone": {
      "type": "function",
      "name": "resetStandalone",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>standalone</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #standalone}."
          }
        ]
      }
    },
    "getInclude": {
      "type": "function",
      "name": "getInclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>include</code>.\n\nFor further details take a look at the property definition: {@link #include}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for include"
          }
        ]
      }
    },
    "setInclude": {
      "type": "function",
      "name": "setInclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>include</code>.\n\nFor further details take a look at the property definition: {@link #include}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for include"
          }
        ]
      }
    },
    "resetInclude": {
      "type": "function",
      "name": "resetInclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>include</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #include}."
          }
        ]
      }
    },
    "getExclude": {
      "type": "function",
      "name": "getExclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>exclude</code>.\n\nFor further details take a look at the property definition: {@link #exclude}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for exclude"
          }
        ]
      }
    },
    "setExclude": {
      "type": "function",
      "name": "setExclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>exclude</code>.\n\nFor further details take a look at the property definition: {@link #exclude}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for exclude"
          }
        ]
      }
    },
    "resetExclude": {
      "type": "function",
      "name": "resetExclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>exclude</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #exclude}."
          }
        ]
      }
    },
    "getBundleInclude": {
      "type": "function",
      "name": "getBundleInclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>bundleInclude</code>.\n\nFor further details take a look at the property definition: {@link #bundleInclude}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for bundleInclude"
          }
        ]
      }
    },
    "setBundleInclude": {
      "type": "function",
      "name": "setBundleInclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>bundleInclude</code>.\n\nFor further details take a look at the property definition: {@link #bundleInclude}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for bundleInclude"
          }
        ]
      }
    },
    "resetBundleInclude": {
      "type": "function",
      "name": "resetBundleInclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>bundleInclude</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #bundleInclude}."
          }
        ]
      }
    },
    "getBundleExclude": {
      "type": "function",
      "name": "getBundleExclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>bundleExclude</code>.\n\nFor further details take a look at the property definition: {@link #bundleExclude}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Array",
            "desc": "Returns the value for bundleExclude"
          }
        ]
      }
    },
    "setBundleExclude": {
      "type": "function",
      "name": "setBundleExclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>bundleExclude</code>.\n\nFor further details take a look at the property definition: {@link #bundleExclude}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Array",
            "paramName": "value",
            "desc": "Value for bundleExclude"
          }
        ]
      }
    },
    "resetBundleExclude": {
      "type": "function",
      "name": "resetBundleExclude",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>bundleExclude</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #bundleExclude}."
          }
        ]
      }
    },
    "getLoaderTemplate": {
      "type": "function",
      "name": "getLoaderTemplate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>loaderTemplate</code>.\n\nFor further details take a look at the property definition: {@link #loaderTemplate}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "String",
            "desc": "Returns the value for loaderTemplate"
          }
        ]
      }
    },
    "setLoaderTemplate": {
      "type": "function",
      "name": "setLoaderTemplate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>loaderTemplate</code>.\n\nFor further details take a look at the property definition: {@link #loaderTemplate}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "String",
            "paramName": "value",
            "desc": "Value for loaderTemplate"
          }
        ]
      }
    },
    "resetLoaderTemplate": {
      "type": "function",
      "name": "resetLoaderTemplate",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>loaderTemplate</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #loaderTemplate}."
          }
        ]
      }
    },
    "getWriteIndexHtmlToRoot": {
      "type": "function",
      "name": "getWriteIndexHtmlToRoot",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writeIndexHtmlToRoot</code>.\n\nFor further details take a look at the property definition: {@link #writeIndexHtmlToRoot}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writeIndexHtmlToRoot"
          }
        ]
      }
    },
    "isWriteIndexHtmlToRoot": {
      "type": "function",
      "name": "isWriteIndexHtmlToRoot",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "is",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>writeIndexHtmlToRoot</code>.\n\nFor further details take a look at the property definition: {@link #writeIndexHtmlToRoot}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Boolean",
            "desc": "Returns the value for writeIndexHtmlToRoot"
          }
        ]
      }
    },
    "setWriteIndexHtmlToRoot": {
      "type": "function",
      "name": "setWriteIndexHtmlToRoot",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>writeIndexHtmlToRoot</code>.\n\nFor further details take a look at the property definition: {@link #writeIndexHtmlToRoot}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Boolean",
            "paramName": "value",
            "desc": "Value for writeIndexHtmlToRoot"
          }
        ]
      }
    },
    "resetWriteIndexHtmlToRoot": {
      "type": "function",
      "name": "resetWriteIndexHtmlToRoot",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>writeIndexHtmlToRoot</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #writeIndexHtmlToRoot}."
          }
        ]
      }
    },
    "getLocalModules": {
      "type": "function",
      "name": "getLocalModules",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "get",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Gets the (computed) value of the property <code>localModules</code>.\n\nFor further details take a look at the property definition: {@link #localModules}."
          }
        ],
        "@return": [
          {
            "name": "@return",
            "type": "Object",
            "desc": "Returns the value for localModules"
          }
        ]
      }
    },
    "setLocalModules": {
      "type": "function",
      "name": "setLocalModules",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "set",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Sets the user value of the property <code>localModules</code>.\n\nFor further details take a look at the property definition: {@link #localModules}."
          }
        ],
        "@param": [
          {
            "name": "@param",
            "type": "Object",
            "paramName": "value",
            "desc": "Value for localModules"
          }
        ]
      }
    },
    "resetLocalModules": {
      "type": "function",
      "name": "resetLocalModules",
      "abstract": false,
      "mixin": false,
      "inherited": false,
      "access": "public",
      "property": "reset",
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "Resets the user value of the property <code>localModules</code>.\n\nThe computed value falls back to the next available value e.g. appearance, init or inheritance value depending on the property configuration and value availability.\n\nFor further details take a look at the property definition: {@link #localModules}."
          }
        ]
      }
    }
  },
  "statics": {
    "createWildcardMatchFunction": {
      "location": {
        "start": {
          "line": 985,
          "column": 4,
          "index": 26825
        },
        "end": {
          "line": 1026,
          "column": 5,
          "index": 28047
        }
      },
      "jsdoc": {
        "@description": [
          {
            "name": "@description",
            "body": "<p>Creates a function that can perform a wildcard match to compare against a function;\n the function returns <code>null</code> if no match, <code>\"exact\"</code> for an exact match, or a number\n to indicating the number of segments in the package (eg <code>qx.util.*</code> will match\n <code>qx.util.format.DateFormat</code> will return 2 because there is <code>qx</code> and <code>util</code>)</p>"
          }
        ],
        "@param": [
          {
            "name": "@param",
            "body": "include {String[]} the wildcard specs to include",
            "paramName": "include",
            "description": " the wildcard specs to include",
            "type": "String[]"
          },
          {
            "name": "@param",
            "body": "exclude {String[]} the wildcard specs to exclude",
            "paramName": "exclude",
            "description": " the wildcard specs to exclude",
            "type": "String[]"
          }
        ],
        "@return": [
          {
            "name": "@return",
            "body": "{Function}",
            "type": "Function",
            "description": ""
          }
        ]
      },
      "type": "function",
      "access": "public"
    }
  },
  "descendants": []
}